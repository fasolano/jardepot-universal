/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostBinding, Input, ChangeDetectionStrategy } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
var NgxJsonLdComponent = /** @class */ (function () {
    function NgxJsonLdComponent(sanitizer) {
        this.sanitizer = sanitizer;
    }
    Object.defineProperty(NgxJsonLdComponent.prototype, "json", {
        set: /**
         * @param {?} currentValue
         * @return {?}
         */
        function (currentValue) {
            this.jsonLD = this.getSafeHTML(currentValue);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} value
     * @return {?}
     */
    NgxJsonLdComponent.prototype.getSafeHTML = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        /** @type {?} */
        var json = value
            ? JSON.stringify(value, null, 2).replace(/<\/script>/g, '<\\/script>')
            : '';
        /** @type {?} */
        var html = "<script type=\"application/ld+json\">" + json + "</script>";
        return this.sanitizer.bypassSecurityTrustHtml(html);
    };
    NgxJsonLdComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ngx-json-ld',
                    template: '',
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    /** @nocollapse */
    NgxJsonLdComponent.ctorParameters = function () { return [
        { type: DomSanitizer }
    ]; };
    NgxJsonLdComponent.propDecorators = {
        json: [{ type: Input }],
        jsonLD: [{ type: HostBinding, args: ['innerHTML',] }]
    };
    return NgxJsonLdComponent;
}());
export { NgxJsonLdComponent };
if (false) {
    /** @type {?} */
    NgxJsonLdComponent.prototype.jsonLD;
    /**
     * @type {?}
     * @private
     */
    NgxJsonLdComponent.prototype.sanitizer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWpzb24tbGQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5neC1saXRlL2pzb24tbGQvIiwic291cmNlcyI6WyJuZ3gtanNvbi1sZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsV0FBVyxFQUNYLEtBQUssRUFDTCx1QkFBdUIsRUFDeEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLFlBQVksRUFBWSxNQUFNLDJCQUEyQixDQUFDO0FBRW5FO0lBV0UsNEJBQW9CLFNBQXVCO1FBQXZCLGNBQVMsR0FBVCxTQUFTLENBQWM7SUFBRyxDQUFDO0lBTC9DLHNCQUNJLG9DQUFJOzs7OztRQURSLFVBQ1MsWUFBZ0I7WUFDdkIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQy9DLENBQUM7OztPQUFBOzs7OztJQUlELHdDQUFXOzs7O0lBQVgsVUFBWSxLQUFTOztZQUNiLElBQUksR0FBRyxLQUFLO1lBQ2hCLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxhQUFhLENBQUM7WUFDdEUsQ0FBQyxDQUFDLEVBQUU7O1lBQ0EsSUFBSSxHQUFHLDBDQUFzQyxJQUFJLGNBQVc7UUFDbEUsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3RELENBQUM7O2dCQW5CRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGFBQWE7b0JBQ3ZCLFFBQVEsRUFBRSxFQUFFO29CQUNaLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDs7OztnQkFOUSxZQUFZOzs7dUJBUWxCLEtBQUs7eUJBSUwsV0FBVyxTQUFDLFdBQVc7O0lBVTFCLHlCQUFDO0NBQUEsQUFwQkQsSUFvQkM7U0FmWSxrQkFBa0I7OztJQUs3QixvQ0FBMkM7Ozs7O0lBQy9CLHVDQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgSG9zdEJpbmRpbmcsXG4gIElucHV0LFxuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneVxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERvbVNhbml0aXplciwgU2FmZUh0bWwgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmd4LWpzb24tbGQnLFxuICB0ZW1wbGF0ZTogJycsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIE5neEpzb25MZENvbXBvbmVudCB7XG4gIEBJbnB1dCgpXG4gIHNldCBqc29uKGN1cnJlbnRWYWx1ZToge30pIHtcbiAgICB0aGlzLmpzb25MRCA9IHRoaXMuZ2V0U2FmZUhUTUwoY3VycmVudFZhbHVlKTtcbiAgfVxuICBASG9zdEJpbmRpbmcoJ2lubmVySFRNTCcpIGpzb25MRDogU2FmZUh0bWw7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc2FuaXRpemVyOiBEb21TYW5pdGl6ZXIpIHt9XG5cbiAgZ2V0U2FmZUhUTUwodmFsdWU6IHt9KSB7XG4gICAgY29uc3QganNvbiA9IHZhbHVlXG4gICAgICA/IEpTT04uc3RyaW5naWZ5KHZhbHVlLCBudWxsLCAyKS5yZXBsYWNlKC88XFwvc2NyaXB0Pi9nLCAnPFxcXFwvc2NyaXB0PicpXG4gICAgICA6ICcnO1xuICAgIGNvbnN0IGh0bWwgPSBgPHNjcmlwdCB0eXBlPVwiYXBwbGljYXRpb24vbGQranNvblwiPiR7anNvbn08L3NjcmlwdD5gO1xuICAgIHJldHVybiB0aGlzLnNhbml0aXplci5ieXBhc3NTZWN1cml0eVRydXN0SHRtbChodG1sKTtcbiAgfVxufVxuIl19