{"version":3,"sources":["./src/app/pages/checkout/checkout.component.html","./src/app/pages/checkout/checkout.component.scss","./src/app/pages/checkout/checkout.component.ts","./src/app/pages/checkout/checkout.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,86RAA86R,aAAa,OAAO,aAAa,i7CAAi7C,aAAa,OAAO,aAAa,6rDAA6rD,cAAc,6DAA6D,qCAAqC,wEAAwE,mBAAmB,8DAA8D,4DAA4D,ubAAub,yGAAyG,oKAAoK,yGAAyG,ueAAue,wEAAwE,oKAAoK,wEAAwE,0YAA0Y,gCAAgC,yVAAyV,oDAAoD,yDAAyD,oDAAoD,oNAAoN,+BAA+B,shBAAshB,sCAAsC,GAAG,qCAAqC,gNAAgN,kCAAkC,sMAAsM,kCAAkC,oMAAoM,kCAAkC,oMAAoM,iCAAiC,2MAA2M,gCAAgC,qMAAqM,mCAAmC,uMAAuM,oCAAoC,8FAA8F,aAAa,mnVAAmnV,iBAAiB,qqBAAqqB,+BAA+B,wtCAAwtC,eAAe,aAAa,kBAAkB,uEAAuE,aAAa,kJAAkJ,09BAA09B,iYAAiY,48TAA48T,aAAa,2DAA2D,KAAK,aAAa,m8CAAm8C,aAAa,qDAAqD,KAAK,aAAa,8hDAA8hD,eAAe,sYAAsY,cAAc,6YAA6Y,qCAAqC,2WAA2W,mBAAmB,kYAAkY,4DAA4D,4MAA4M,2BAA2B,oWAAoW,oDAAoD,yDAAyD,oDAAoD,oNAAoN,+BAA+B,shBAAshB,sCAAsC,GAAG,qCAAqC,gNAAgN,kCAAkC,sMAAsM,kCAAkC,oMAAoM,kCAAkC,oMAAoM,iCAAiC,2MAA2M,gCAAgC,qMAAqM,mCAAmC,uMAAuM,oCAAoC,8FAA8F,aAAa,goVAAgoV,iBAAiB,qqBAAqqB,+BAA+B,wtCAAwtC,eAAe,aAAa,kBAAkB,uEAAuE,aAAa,kJAAkJ,49BAA49B,kYAAkY,upC;;;;;;;;;;;ACA/t/D,iDAAiD,mBAAmB,qBAAqB,GAAG,yFAAyF,kBAAkB,6BAA6B,+BAA+B,wBAAwB,qBAAqB,oBAAoB,qBAAqB,GAAG,0CAA0C,qBAAqB,GAAG,2FAA2F,YAAY,qBAAqB,0BAA0B,GAAG,kDAAkD,oBAAoB,GAAG,+CAA+C,gBAAgB,GAAG,wBAAwB,gBAAgB,qBAAqB,sBAAsB,GAAG,gBAAgB,oBAAoB,GAAG,uBAAuB,iBAAiB,oBAAoB,GAAG,iCAAiC,oCAAoC,GAAG,uBAAuB,oCAAoC,GAAG,yDAAyD,oCAAoC,GAAG,iCAAiC,oCAAoC,GAAG,wCAAwC,gBAAgB,gBAAgB,6BAA6B,KAAK,0BAA0B,qBAAqB,KAAK,2EAA2E,yBAAyB,0BAA0B,kBAAkB,mBAAmB,iBAAiB,yBAAyB,iBAAiB,KAAK,2BAA2B,oCAAoC,qBAAqB,KAAK,iDAAiD,iBAAiB,wCAAwC,iBAAiB,gCAAgC,oCAAoC,qBAAqB,qBAAqB,wBAAwB,wBAAwB,mBAAmB,wBAAwB,KAAK,kDAAkD,yBAAyB,oBAAoB,KAAK,yDAAyD,oBAAoB,KAAK,mCAAmC,4GAA4G,wCAAwC,kBAAkB,iCAAiC,0BAA0B,wBAAwB,KAAK,uCAAuC,uBAAuB,KAAK,wCAAwC,qBAAqB,KAAK,GAAG,kCAAkC,2BAA2B,GAAG,gEAAgE,2BAA2B,GAAG,6CAA6C,m0S;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9rF;AACO;AACU;AAC/B;AACJ;AAC4B;AACpB;AACe;AAOhE,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAqB1B,YAAmB,UAAsB,EAAS,WAAwB,EAAS,MAAiB,EAAU,aAA4B;QAAvH,eAAU,GAAV,UAAU,CAAY;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAW;QAAU,kBAAa,GAAb,aAAa,CAAe;QAd1I,cAAS,GAAG,EAAE,CAAC;QACf,WAAM,GAAG,EAAE,CAAC;QACZ,UAAK,GAAG,EAAE,CAAC;QACX,oBAAe,GAAG,EAAE,CAAC;QACrB,mBAAc,GAAG,EAAE,CAAC;QACpB,eAAU,GAAG,CAAC,CAAC;QACf,SAAI,GAAG,GAAG,CAAC;QACX,gBAAW,GAAG,KAAK,CAAC;QACpB,iBAAY,GAAG,KAAK,CAAC;QAErB,qBAAgB,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;QACzE,oBAAe,GAAG,uBAAuB,CAAC;IAI1C,CAAC;IAED,QAAQ;QACJ,2EAA2E;QAC3E,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,EAAE,CAAC;QAC5D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;QAC1D,6BAA6B;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,SAAS,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC,CAAC,CAAC;YAC1I,QAAQ,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC,CAAC,CAAC;YACzI,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,0EAAc,CAAC,CAAC,CAAC;YACxE,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAChH,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC,CAAC,CAAC;YACtI,IAAI,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC,CAAC,CAAC;YACrI,MAAM,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClF,GAAG,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC7G,OAAO,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACtF,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5C,YAAY,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC,CAAC,CAAC;YAC9I,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,GAAG,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC1G,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,0EAAc,CAAC,CAAC,CAAC;YACxE,KAAK,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC,CAAC,CAAC;YACtI,IAAI,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC,CAAC,CAAC;YACrI,GAAG,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC7G,OAAO,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACtF,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACvC,cAAc,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC5C,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,aAAa,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC/D,CAAC,CAAC;IACP,CAAC;IAEM,cAAc;QACjB,IAAI,YAAY,GAAc,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACpE,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE;YAC1F,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;YAC5C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAC/G;aAAM;YACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC;SACrD;QAED,oCAAoC;QACpC;;;;;;WAMG;QACH,6FAA6F;QAC7F,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAC,YAAY,CAAC,CAAC;IAC3D,CAAC;IAEM,UAAU;QACb,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC;QACrE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC;QACnE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;QACxC,MAAM,IAAI,GAAG;YACT,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/C,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;YAC3D,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACjD,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/C,WAAW,EAAE,IAAI,CAAC,WAAW;SAChC,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACnD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,aAAa;YACb,IAAI,QAAQ,CAAC,IAAI,IAAI,SAAS,EAAE;gBAC5B,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;oBACrC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;iBAC3C;gBACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;gBAC9B,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;aAC/B;iBAAM;gBACH,aAAa;gBACb,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,IAAI,aAAa,EAAE;oBACtC,aAAa;oBACb,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;wBAC1I,aAAa;wBACb,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;wBACtB,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;oBAC9B,CAAC,CAAC,CAAC;iBACN;qBAAM;oBACH,aAAa;oBACb,IAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;oBAC5B,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;iBAC7B;aACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,iBAAiB,CAAC,QAAQ;QAC7B,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+EAAe,EAAE;YAChD,UAAU,EAAE,gBAAgB;YAC5B,SAAS,EAAE,KAAK;SACnB,CAAC,CAAC;QACH,SAAS,CAAC,iBAAiB,CAAC,KAAK,GAAG,SAAS,CAAC;QAC9C,SAAS,CAAC,iBAAiB,CAAC,IAAI,GAAG,wEAAwE,GAAG,QAAQ,GAAG,wCAAwC,CAAC;IACtK,CAAC;IAEM,iBAAiB;QACpB,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,gCAAgC,CAAC;QACpD,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,gCAAgC,CAAC;QACrD,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,gCAAgC,CAAC;QAClD,IAAI,eAAe,GAAG,IAAI,mDAAO,CAAC,CAAC,CAAC,EAChC,sCAAsC,EACtC,IAAI,EACJ,CAAC,EACD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,EACvD,CAAC,EACD,EAAE,EACF,EAAE,EACF,EAAE,EACF,IAAI,EACJ,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,CACL,CAAC;QACF,OAAO,eAAe,CAAC;IAC3B,CAAC;IAEM,gBAAgB;QACnB,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,gCAAgC,CAAC;QACpD,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,gCAAgC,CAAC;QACrD,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,gCAAgC,CAAC;QAClD,IAAI,cAAc,GAAG,IAAI,mDAAO,CAAC,CAAC,CAAC,EAC/B,yBAAyB,EACzB,IAAI,EACJ,CAAC,EACD,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,EAC/E,CAAC,EACD,EAAE,EACF,EAAE,EACF,EAAE,EACF,IAAI,EACJ,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,EAAE,EACF,CAAC,EACD,CAAC,EACD,EAAE,CACL,CAAC;QACF,OAAO,cAAc,CAAC;IAC1B,CAAC;IAEM,cAAc,CAAC,EAAO;QACzB,MAAM,MAAM,GAAG,EAAE,CAAC,UAAU,CAAC;QAC7B,MAAM,MAAM,GAAG,uCAAuC,CAAC;QACvD,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;IACxB,CAAC;CAEJ;;YA7KkC,uDAAU;YAAsB,0DAAW;YAAiB,2DAAS;YAAyB,gEAAa;;AApB1F;IAA/C,+DAAS,CAAC,mBAAmB,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;8BAAoB,4DAAU;4DAAC;AAChC;IAA7C,+DAAS,CAAC,iBAAiB,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;8BAAkB,4DAAU;0DAAC;AAFjE,iBAAiB;IAL7B,+DAAS,CAAC;QACP,QAAQ,EAAE,cAAc;QACxB,gKAAwC;;KAE3C,CAAC;qCAsBiC,uDAAU,EAAsB,0DAAW,EAAiB,2DAAS,EAAyB,gEAAa;GArBjI,iBAAiB,CAkM7B;AAlM6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdW;AACM;AACA;AACiB;AACN;AACD;AAElD,MAAM,MAAM,GAAG;IACpB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qEAAiB,EAAE,SAAS,EAAE,MAAM,EAAE;IAC7D,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,qEAAiB,EAAE,SAAS,EAAE,MAAM,EAAE;CAClE,CAAC;AAcF,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAI;AAAlB,cAAc;IAZ1B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,kEAAmB;YACnB,kEAAY;YACZ,0DAAW;SACZ;QACD,YAAY,EAAE;YACZ,qEAAiB;SAClB;KACF,CAAC;GACW,cAAc,CAAI;AAAJ","file":"pages-checkout-checkout-module-es2015.js","sourcesContent":["module.exports = \"<mat-horizontal-stepper #horizontalStepper linear=\\\"true\\\" class=\\\"mat-elevation-z2\\\" fxShow=\\\"false\\\" fxShow.gt-sm>\\r\\n    <mat-step [stepControl]=\\\"billingForm\\\" label=\\\"Datos de envio\\\">\\r\\n        <form [formGroup]=\\\"billingForm\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Nombre(s)</mat-label>\\r\\n                        <input matInput placeholder=\\\"Nombre(s)\\\" formControlName=\\\"firstName\\\" maxlength=\\\"50\\\" required>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.firstName.errors?.required\\\">\\r\\n                            Nombre es requerido\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.firstName.hasError('minlength')\\\">\\r\\n                            El nombre es muy corto, mínimo 3 caracteres\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.firstName.hasError('pattern')\\\">\\r\\n                            Escribe en nombre válido\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Apellidos</mat-label>\\r\\n                        <input matInput placeholder=\\\"Apellido\\\" formControlName=\\\"lastName\\\" maxlength=\\\"50\\\" required>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.lastName.errors?.required\\\">Apellido es requerido\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.lastName.hasError('minlength')\\\">\\r\\n                            El apellido es muy corto, mínimo 3 caracteres\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.lastName.hasError('pattern')\\\">\\r\\n                            Escribe un apellido válido\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Email</mat-label>\\r\\n                        <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.email.errors?.required\\\">Correo electrónico es requerido\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.email.hasError('invalidEmail')\\\">El Correo electrónico es\\r\\n                            invalido\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Teléfono</mat-label>\\r\\n                        <input matInput placeholder=\\\"Teléfono\\\" formControlName=\\\"phone\\\" maxlength=\\\"10\\\" required>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.phone.errors?.required\\\">Teléfono es requerido</mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.phone.hasError('pattern')\\\">\\r\\n                            El teléfono es invalido, ingresa números\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.phone.hasError('minlength')\\\">\\r\\n                            El teléfono es muy corto, son 10 números\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Estado</mat-label>\\r\\n                        <input matInput placeholder=\\\"Estado\\\" formControlName=\\\"state\\\" maxlength=\\\"50\\\" required>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.state.errors?.required\\\">Estado es requerido</mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.state.hasError('minlength')\\\">\\r\\n                            El estado es muy corto, mínimo 5 caracteres\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.state.hasError('pattern')\\\">\\r\\n                            Escribe un estado válido\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Ciudad/Municipio</mat-label>\\r\\n                        <input matInput placeholder=\\\"Ciudad/Municipio\\\" formControlName=\\\"city\\\" maxlength=\\\"50\\\" required>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.city.errors?.required\\\">Ciudad es requerida</mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.city.hasError('minlength')\\\">\\r\\n                            El municipio es muy corto, mínimo 5 caracteres\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.city.hasError('pattern')\\\">\\r\\n                            Escribe un municipio válido\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Código postal</mat-label>\\r\\n                        <input matInput placeholder=\\\"Código postal\\\" formControlName=\\\"zip\\\" maxlength=\\\"5\\\" required>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.zip.errors?.required\\\">Código postal es requerido\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.zip.hasError('pattern')\\\">\\r\\n                            El Código postal es invalido, ingresa números\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Colonia</mat-label>\\r\\n                        <input matInput placeholder=\\\"Colonia\\\" formControlName=\\\"suburb\\\" maxlength=\\\"50\\\" required>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.suburb.errors?.required\\\">La colonia es requerido\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.suburb.hasError('minlength')\\\">\\r\\n                            El nombre de la colonia es muy corto, mínimo 5 caracteres\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" class=\\\"px-1\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Dirección</mat-label>\\r\\n                        <input matInput placeholder=\\\"Dirección (Calle número interior, número exterior )\\\"\\r\\n                               formControlName=\\\"address\\\" maxlength=\\\"100\\\" required>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.address.errors?.required\\\">La dirección es requerida\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.address.hasError('minlength')\\\">\\r\\n                            La dirección es muy corta, mínimo 5 caracteres\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-2 p-1\\\">\\r\\n                <button mat-mini-fab matStepperNext color=\\\"primary\\\" matTooltip=\\\"Siguiente\\\" matTooltipPosition=\\\"after\\\">\\r\\n                    <mat-icon>navigate_next</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </mat-step>\\r\\n    <mat-step [stepControl]=\\\"deliveryForm\\\" label=\\\"Método de entrega\\\">\\r\\n        <form [formGroup]=\\\"deliveryForm\\\" class=\\\"p-2\\\">\\r\\n            <mat-radio-group formControlName=\\\"deliveryMethod\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" required\\r\\n                             name=\\\"methods\\\">\\r\\n                <mat-radio-button *ngFor=\\\"let method of deliveryMethods\\\" color=\\\"primary\\\" [value]=\\\"method\\\" class=\\\"mt-1\\\"  (change)=\\\"calculateTotal()\\\">\\r\\n                    <b>{{method.name}}</b> {{method.desc}}</mat-radio-button>\\r\\n            </mat-radio-group>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-2 p-1\\\">\\r\\n                <button mat-mini-fab matStepperPrevious color=\\\"primary\\\" matTooltip=\\\"Atras\\\" matTooltipPosition=\\\"before\\\"\\r\\n                        class=\\\"mr-1\\\">\\r\\n                    <mat-icon>navigate_before</mat-icon>\\r\\n                </button>\\r\\n                <button mat-mini-fab matStepperNext color=\\\"primary\\\" matTooltip=\\\"Siguiente\\\" matTooltipPosition=\\\"after\\\">\\r\\n                    <mat-icon>navigate_next</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </mat-step>\\r\\n    <!--<mat-step [stepControl]=\\\"paymentForm\\\" label=\\\"Método de pago\\\">\\r\\n      <form [formGroup]=\\\"paymentForm\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\" class=\\\"p-1\\\">\\r\\n            <span class=\\\"text-muted\\\">Elige método para realizar tu pago</span>\\r\\n            <img src=\\\"assets/images/others/card-icon.png\\\" alt=\\\"\\\">\\r\\n          </div>\\r\\n          <mat-radio-group formControlName=\\\"paymentMethod\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" required\\r\\n                           name=\\\"methods\\\" (change)=\\\"calculateTotal()\\\">\\r\\n            <mat-radio-button *ngFor=\\\"let method of paymentMethods\\\" color=\\\"primary\\\" [value]=\\\"method\\\" class=\\\"mt-1\\\">\\r\\n              <b>{{method.name}}</b> {{method.desc}}</mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-2 p-1\\\">\\r\\n          <button mat-mini-fab matStepperPrevious color=\\\"primary\\\" matTooltip=\\\"Atras\\\" matTooltipPosition=\\\"before\\\"\\r\\n                  class=\\\"mr-1\\\">\\r\\n            <mat-icon>navigate_before</mat-icon>\\r\\n          </button>\\r\\n          <button mat-mini-fab matStepperNext color=\\\"primary\\\" matTooltip=\\\"Siguiente\\\" matTooltipPosition=\\\"after\\\">\\r\\n            <mat-icon>navigate_next</mat-icon>\\r\\n          </button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-step>-->\\r\\n    <mat-step label=\\\"Vista previa de la orden\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\" class=\\\"p-1\\\">\\r\\n                <h3 class=\\\"text-muted\\\">Carrito de compra</h3>\\r\\n                <div class=\\\"divider\\\"></div>\\r\\n                <div class=\\\"mat-table review-order-table\\\">\\r\\n                    <div class=\\\"mat-header-row\\\">\\r\\n                        <div class=\\\"mat-header-cell\\\">Producto</div>\\r\\n                        <div class=\\\"mat-header-cell\\\">Nombre</div>\\r\\n                        <div class=\\\"mat-header-cell\\\">Precio unitario</div>\\r\\n                        <div class=\\\"mat-header-cell\\\">Cantidad</div>\\r\\n                        <div class=\\\"mat-header-cell\\\">Total</div>\\r\\n                    </div>\\r\\n                    <div *ngFor=\\\"let product of appService.Data.cartList\\\" class=\\\"mat-row\\\">\\r\\n                        <div class=\\\"mat-cell\\\"><img [src]=\\\"product.images[0].small\\\" (error)=\\\"handleImgError($event)\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"mat-cell\\\">{{product.name}}</div>\\r\\n                        <div class=\\\"mat-cell\\\">${{product.newPrice | number : '1.2-2'}}</div>\\r\\n                        <div class=\\\"mat-cell text-muted\\\"> {{product.cartCount}} </div>\\r\\n                        <div class=\\\"mat-cell\\\">${{ (product.newPrice * product.cartCount) | number : '1.2-2'}}</div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"paymentForm.controls.paymentMethod.value['value'] != 'Transferencia'\\\" class=\\\"mat-row\\\">\\r\\n                        <div class=\\\"mat-cell\\\"><img [src]=\\\"'assets/images/productos/--.png'\\\"></div>\\r\\n                        <div class=\\\"mat-cell\\\">Comisión por forma de pago</div>\\r\\n                        <div class=\\\"mat-cell\\\">\\r\\n                            ${{ (paymentForm.controls.paymentMethod.value['cost'] - 1) * appService.Data.totalPrice | number : '1.2-2'}}</div>\\r\\n                        <div class=\\\"mat-cell text-muted\\\"> 1</div>\\r\\n                        <div class=\\\"mat-cell\\\">\\r\\n                            ${{ (paymentForm.controls.paymentMethod.value['cost'] - 1) * appService.Data.totalPrice | number : '1.2-2'}}</div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"deliveryForm.controls.deliveryMethod.value['min'] > appService.Data.totalPrice\\\"\\r\\n                         class=\\\"mat-row\\\">\\r\\n                        <div class=\\\"mat-cell\\\"><img [src]=\\\"'assets/images/productos/--.png'\\\"></div>\\r\\n                        <div class=\\\"mat-cell\\\">Manejo de Mercancía Envío paquetería</div>\\r\\n                        <div class=\\\"mat-cell\\\">\\r\\n                            ${{ deliveryForm.controls.deliveryMethod.value['cost'] | number : '1.2-2'}}</div>\\r\\n                        <div class=\\\"mat-cell text-muted\\\"> 1</div>\\r\\n                        <div class=\\\"mat-cell\\\">\\r\\n                            ${{ deliveryForm.controls.deliveryMethod.value['cost'] | number : '1.2-2'}}</div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"mat-row\\\">\\r\\n                        <div class=\\\"mat-cell\\\"></div>\\r\\n                        <div class=\\\"mat-cell\\\"></div>\\r\\n                        <div class=\\\"mat-cell\\\"></div>\\r\\n                        <div class=\\\"mat-cell text-muted\\\">Subtotal:</div>\\r\\n                        <div class=\\\"mat-cell\\\">${{ grandTotal | number : '1.2-2'}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\">\\r\\n            <div fxFlex=\\\"100\\\" class=\\\"p-1\\\">\\r\\n                <h3 class=\\\"text-muted mt-2\\\">Método de envio</h3>\\r\\n                <div class=\\\"divider\\\"></div>\\r\\n                <p class=\\\"py-1\\\">{{deliveryForm.controls.deliveryMethod.value['name']}} <span\\r\\n                        class=\\\"text-muted\\\">{{deliveryForm.controls.deliveryMethod.value['desc']}}</span></p>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"p-1\\\">\\r\\n            <h2><span class=\\\"text-muted mr-1\\\">Precio total:</span><span>${{grandTotal | number : '1.2-2'}}</span></h2>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\" class=\\\"p-1\\\">\\r\\n                <h3 class=\\\"text-muted mt-2\\\">Datos de envio</h3>\\r\\n                <mat-checkbox [(ngModel)]=\\\"showBilling\\\">Agregar datos de facturación</mat-checkbox>\\r\\n                <div class=\\\"divider\\\"></div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-1\\\">\\r\\n                <p class=\\\"text-muted\\\">Nombre:</p>\\r\\n                <p>{{billingForm.controls.firstName.value}} {{billingForm.controls.lastName.value}}</p>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-1\\\">\\r\\n                <p class=\\\"text-muted\\\">Correo electrónico:</p>\\r\\n                <p>{{billingForm.controls.email.value}}</p>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-1\\\">\\r\\n                <p class=\\\"text-muted\\\">Teléfono:</p>\\r\\n                <p>{{billingForm.controls.phone.value}}</p>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-1\\\">\\r\\n                <p class=\\\"text-muted\\\">Estado:</p>\\r\\n                <p>{{billingForm.controls.state.value}}</p>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-1\\\">\\r\\n                <p class=\\\"text-muted\\\">Ciudad:</p>\\r\\n                <p>{{billingForm.controls.city.value}}</p>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-1\\\">\\r\\n                <p class=\\\"text-muted\\\">Código postal:</p>\\r\\n                <p>{{billingForm.controls.zip.value}}</p>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-1\\\">\\r\\n                <p class=\\\"text-muted\\\">Colonia:</p>\\r\\n                <p>{{billingForm.controls.suburb.value}}</p>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-1\\\">\\r\\n                <p class=\\\"text-muted\\\">Dirección:</p>\\r\\n                <p>{{billingForm.controls.address.value}}</p>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\" fxShow=\\\"{{showBilling}}\\\">\\r\\n            <form [formGroup]=\\\"billMandatoryForm\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Tipo de persona</mat-label>\\r\\n                            <mat-select required formControlName=\\\"typePerson\\\">\\r\\n                                <mat-option [value]=\\\"'fisica'\\\">\\r\\n                                    Persona Física\\r\\n                                </mat-option>\\r\\n                                <mat-option [value]=\\\"'moral'\\\">\\r\\n                                    Persona Moral\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.socialReason.errors?.required\\\">Tipo de persona\\r\\n                                es requerido\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Uso de CFDI</mat-label>\\r\\n                            <mat-select required formControlName=\\\"usoCFDI\\\">\\r\\n                                <mat-option [value]=\\\"'G01 Adquisición de mercancías'\\\">G01 Adquisición de mercancías\\r\\n                                </mat-option>\\r\\n                                <mat-option [value]=\\\"'G03 Gastos en general'\\\">G03 Gastos en general</mat-option>\\r\\n                                <mat-option [value]=\\\"'I08 Otra maquinaria y equipo'\\\">I08 Otra maquinaria y equipo\\r\\n                                </mat-option>\\r\\n                                <mat-option [value]=\\\"'P01 Por definir'\\\">P01 Por definir</mat-option>\\r\\n                            </mat-select>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.usoCFDI.errors?.required\\\">Uso de CFDI es\\r\\n                                requerido\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\"\\r\\n                         [fxShow]=\\\"paymentForm.controls.paymentMethod.value['value']=='Transferencia'\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Forma de pago</mat-label>\\r\\n                            <mat-select required formControlName=\\\"typePayment\\\">\\r\\n                                <mat-option [value]=\\\"'01 Efectivo'\\\">Deposito en ventanilla con efectivo</mat-option>\\r\\n                                <mat-option [value]=\\\"'02 Cheque nominativo'\\\">Deposito de cheque</mat-option>\\r\\n                                <mat-option [value]=\\\"'03 Transferencia eletrónica de fondos'\\\">Transferencia\\r\\n                                    electrónica\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.usoCFDI.errors?.required\\\">Uso de CFDI es\\r\\n                                requerido\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Razón social</mat-label>\\r\\n                            <input matInput placeholder=\\\"Razón social\\\" formControlName=\\\"socialReason\\\" maxlength=\\\"100\\\"\\r\\n                                   required>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.socialReason.errors?.required\\\">Razón social es\\r\\n                                requerido\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.socialReason.hasError('pattern')\\\">\\r\\n                                La razón social es invalida\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.socialReason.hasError('minlength')\\\">\\r\\n                                La razón social es muy corta, mínimo 5 caracteres\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>RFC</mat-label>\\r\\n                            <input matInput placeholder=\\\"RFC\\\" formControlName=\\\"rfc\\\" required>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.rfc.errors?.required\\\">RFC es requerido\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.rfc.hasError('minlength')\\\">\\r\\n                                El RFC es muy corto, mínimo 12 caracteres\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.rfc.hasError('maxlength')\\\">\\r\\n                                El RFC es muy largo, máximo 13 caracteres\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Corre electrónico</mat-label>\\r\\n                            <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.email.errors?.required\\\">Corre electrónico es\\r\\n                                requerido\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.email.hasError('invalidEmail')\\\">El Correo\\r\\n                                electrónico es invalido\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Estado</mat-label>\\r\\n                            <input matInput placeholder=\\\"Estado\\\" formControlName=\\\"state\\\">\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.state.errors?.required\\\">Estado es requerido\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.state.hasError('minlength')\\\">\\r\\n                                El estado es muy corto, mínimo 5 caracteres\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.state.hasError('pattern')\\\">\\r\\n                                Escribe un estado válido\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Ciudad/Municipio</mat-label>\\r\\n                            <input matInput placeholder=\\\"Ciudad/Municipio\\\" formControlName=\\\"city\\\" required>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.city.errors?.required\\\">Ciudad es requerida\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.city.hasError('minlength')\\\">\\r\\n                                El municipio es muy corto, mínimo 5 caracteres\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.city.hasError('pattern')\\\">\\r\\n                                Escribe un municipio válido\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Código postal</mat-label>\\r\\n                            <input matInput placeholder=\\\"Código postal\\\" formControlName=\\\"zip\\\" required>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.zip.errors?.required\\\">Código postal es\\r\\n                                requerido\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.zip.hasError('pattern')\\\">\\r\\n                                El Código postal es invalido, ingresa números\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div [fxFlex]=\\\"paymentForm.controls.paymentMethod.value['value']=='Transferencia' ? 75:100\\\"\\r\\n                         class=\\\"px-1\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Dirección</mat-label>\\r\\n                            <input matInput placeholder=\\\"Dirección (Calle número interior, número exterior )\\\"\\r\\n                                   formControlName=\\\"address\\\" required>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.address.errors?.required\\\">La dirección es\\r\\n                                requerida\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.address.hasError('minlength')\\\">\\r\\n                                La dirección es muy corta, mínimo 5 caracteres\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-2 p-1\\\">\\r\\n            <button mat-mini-fab matStepperPrevious color=\\\"primary\\\" matTooltip=\\\"Atras\\\" matTooltipPosition=\\\"before\\\"\\r\\n                    class=\\\"mr-1\\\" [disabled]=\\\"blockButtoms\\\">\\r\\n                <mat-icon>navigate_before</mat-icon>\\r\\n            </button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"placeOrder()\\\"\\r\\n                    [disabled]=\\\"blockButtoms\\\">{{textButtonOrder}}</button>\\r\\n        </div>\\r\\n    </mat-step>\\r\\n    <mat-step label=\\\"Confirmación\\\" style=\\\"\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"p-2 text-center\\\">\\r\\n            <button mat-fab class=\\\"bg-color-jd\\\">\\r\\n                <mat-icon>check</mat-icon>\\r\\n            </button>\\r\\n            <h2 class=\\\"mt-2\\\">En tu correo ya tienes el formato con el puedes realizar el desposito en ventanilla o una\\r\\n                transferencia electrónica</h2>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"p-1\\\">\\r\\n                <h2><span class=\\\"text-muted mr-1\\\">Total a pagar:</span><span>${{grandTotal | number : '1.2-2'}}</span>\\r\\n                </h2>\\r\\n            </div>\\r\\n\\r\\n            <h2 class=\\\"py-1\\\">Datos bancarios:</h2>\\r\\n            <h3 class=\\\"py-1\\\">Beneficiario: JARDEPOT SA de CV</h3>\\r\\n            <h3 class=\\\"py-1\\\">RFC: JAR111021F14</h3>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\" class=\\\"p-2\\\">\\r\\n\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"35\\\" fxFlexOffset.gt-sm=\\\"15\\\" class=\\\"px-1 bank-card\\\"\\r\\n                 fxLayoutAlign=\\\"center center\\\">\\r\\n                <div fxLayout=\\\"column\\\">\\r\\n                    <img src=\\\"assets/images/bancos/citibanamex.png\\\" alt=\\\"Banamex\\\" class=\\\"img-bank\\\">\\r\\n                    <p class=\\\"text-muted lh\\\">Cuenta: <strong>0084594</strong></p>\\r\\n                    <p class=\\\"text-muted lh\\\">Sucursal: <strong>4097</strong></p>\\r\\n                    <p class=\\\"text-muted lh\\\">CLABE: <strong>0025 4040 9700 8459 41</strong></p>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"35\\\" class=\\\"px-1 bank-card\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                <div fxLayout=\\\"column\\\">\\r\\n                    <div fxLayoutAlign=\\\"center center\\\"\\r\\n                         style=\\\"max-height: 132px !important; height: 132px; width: 100%; max-width: 300px;\\\">\\r\\n                        <div style=\\\" background-color: #072146; height: 40%;\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                            <img src=\\\"assets/images/bancos/bbva.svg\\\" alt=\\\"Bancomer\\\" style=\\\"width: 50%;\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <p class=\\\"text-muted lh\\\">Cuenta: <strong>0110147699</strong></p>\\r\\n                    <p class=\\\"text-muted lh\\\">CLABE: <strong>0125 4000 1101 4769 96</strong></p>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\" class=\\\"p-2\\\">\\r\\n            <div fxFlex=\\\"33\\\" fxFlex.gt-md=\\\"25\\\" fxFlexOffset.gt-md=\\\"13\\\" class=\\\"bank-card\\\">\\r\\n                <img src=\\\"assets/images/bancos/banbajio.png\\\" alt=\\\"Banbajio\\\" class=\\\"img-bank\\\">\\r\\n                <p class=\\\"text-muted lh\\\">Cuenta: <strong>11925492</strong></p>\\r\\n                <p class=\\\"text-muted lh\\\">CLABE: <strong>0305 4090 0003 3487 84</strong></p>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex=\\\"33\\\" fxFlex.gt-md=\\\"25\\\" class=\\\"bank-card\\\">\\r\\n                <img src=\\\"assets/images/bancos/banorte.png\\\" alt=\\\"Banorte\\\" class=\\\"img-bank\\\" style=\\\"height: 119px;\\\">\\r\\n                <p class=\\\"text-muted lh\\\">Cuenta: <strong>0323900559</strong></p>\\r\\n                <p class=\\\"text-muted lh\\\">CLABE: <strong>0725 4000 3239 0055 94</strong></p>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex=\\\"33\\\" fxFlex.gt-md=\\\"25\\\" class=\\\"bank-card\\\">\\r\\n                <div class=\\\"img-bank\\\" fxLayoutAlign=\\\"center center\\\" style=\\\"height: 125px;\\\">\\r\\n                    <img src=\\\"assets/images/bancos/santander.svg\\\" alt=\\\"Santander\\\" style=\\\"width: 80%\\\">\\r\\n                </div>\\r\\n                <p class=\\\"text-muted lh\\\">Cuenta: <strong>65505199530</strong></p>\\r\\n                <p class=\\\"text-muted lh\\\">CLABE: <strong>0145 4065 5051 9953 08</strong></p>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <p class=\\\"text-muted lh\\\">\\r\\n            Una vez realizado su depósito o transferencia, favor de informar al correo ventas@jardepot.com Incluyendo\\r\\n            sus datos\\r\\n            completos para facturación y envío, así como los productos solicitados. Después de haber efectuado su pago,\\r\\n            no se\\r\\n            aceptan cancelaciones. Atentos saludos del equipo de atención a clientes JARDEPOT SA de CV. Quienes\\r\\n            agradecen su confianza esperando poder contar con su preferencia.\\r\\n        </p>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-2 p-1\\\">\\r\\n            <a [routerLink]=\\\"['/']\\\" mat-raised-button color=\\\"primary\\\">Regresar al inicio</a>\\r\\n        </div>\\r\\n\\r\\n    </mat-step>\\r\\n</mat-horizontal-stepper>\\r\\n\\r\\n<mat-vertical-stepper #verticalStepper linear=\\\"true\\\" class=\\\"mat-elevation-z2\\\" fxHide=\\\"false\\\" fxHide.gt-sm>\\r\\n    <mat-step [stepControl]=\\\"billingForm\\\" label=\\\"Datos de envio\\\">\\r\\n        <form [formGroup]=\\\"billingForm\\\">\\r\\n            <div fxLayout=\\\"row wrap\\\">\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Nombre(s)</mat-label>\\r\\n                        <input matInput placeholder=\\\"Nombre(s)\\\" formControlName=\\\"firstName\\\" maxlength=\\\"50\\\" required>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.firstName.errors?.required\\\">Nombre es requerido\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.firstName.hasError('minlength')\\\">\\r\\n                            El nombre es muy corto, mínimo 3 caracteres\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.firstName.hasError('pattern')\\\">\\r\\n                            Escribe en nombre válido\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Apellidos</mat-label>\\r\\n                        <input matInput placeholder=\\\"Apellido\\\" formControlName=\\\"lastName\\\" maxlength=\\\"50\\\" required>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.lastName.errors?.required\\\">Apellido es requerido\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                    <mat-error *ngIf=\\\"billingForm.controls.lastName.hasError('minlength')\\\">\\r\\n                        El apellido es muy corto, mínimo 3 caracteres\\r\\n                    </mat-error>\\r\\n                    <mat-error *ngIf=\\\"billingForm.controls.lastName.hasError('pattern')\\\">\\r\\n                        Escribe un apellido válido\\r\\n                    </mat-error>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Email</mat-label>\\r\\n                        <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.email.errors?.required\\\">Corre eletrónico es requerido\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.email.hasError('invalidEmail')\\\">El Correo eletrónico es\\r\\n                            invalido\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Teléfono</mat-label>\\r\\n                        <input matInput placeholder=\\\"Teléfono\\\" formControlName=\\\"phone\\\" maxlength=\\\"10\\\" required>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.phone.errors?.required\\\">Teléfono es requerido</mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.phone.hasError('pattern')\\\">\\r\\n                            El teléfono es invalido, ingresa números\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.phone.hasError('minlength')\\\">\\r\\n                            El teléfono es muy corto, son 10 números\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Estado</mat-label>\\r\\n                        <input matInput placeholder=\\\"Estado\\\" formControlName=\\\"state\\\" maxlength=\\\"50\\\" required>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.state.errors?.required\\\">Estado es requerido</mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.state.hasError('minlength')\\\">\\r\\n                            El estado es muy corto, mínimo 5 caracteres\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.state.hasError('pattern')\\\">\\r\\n                            Escribe un estado válido\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Ciudad/Municipio</mat-label>\\r\\n                        <input matInput placeholder=\\\"Ciudad/Municipio\\\" formControlName=\\\"city\\\" maxlength=\\\"50\\\" required>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.city.errors?.required\\\">Ciudad es requerida</mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.city.hasError('minlength')\\\">\\r\\n                            El municipio es muy corto, mínimo 5 caracteres\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.city.hasError('pattern')\\\">\\r\\n                            Escribe un municipio válido\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Código postal</mat-label>\\r\\n                        <input matInput placeholder=\\\"Código postal\\\" formControlName=\\\"zip\\\" maxlength=\\\"5\\\" required>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.zip.errors?.required\\\">Código postal es requerido\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.zip.hasError('pattern')\\\">\\r\\n                            El Código postal es invalido, ingresa números\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Colonia</mat-label>\\r\\n                        <input matInput placeholder=\\\"Colonia\\\" formControlName=\\\"suburb\\\" maxlength=\\\"50\\\" required>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.suburb.errors?.required\\\">La colonia es requerido\\r\\n                        </mat-error>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.suburb.hasError('minlength')\\\">\\r\\n                            El nombre de la colonia es muy corto, mínimo 5 caracteres\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div fxFlex=\\\"100\\\" class=\\\"px-1\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                        <mat-label>Dirección</mat-label>\\r\\n                        <input matInput placeholder=\\\"Dirección (Calle número interior, número exterior )\\\"\\r\\n                               formControlName=\\\"address\\\" maxlength=\\\"100\\\" required>\\r\\n                        <mat-error *ngIf=\\\"billingForm.controls.address.errors?.required\\\">La dirección es requerida\\r\\n                        </mat-error>\\r\\n                    </mat-form-field>\\r\\n                    <mat-error *ngIf=\\\"billingForm.controls.address.hasError('minlength')\\\">\\r\\n                        La dirección es muy corta, mínimo 5 caracteres\\r\\n                    </mat-error>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-2 p-1\\\">\\r\\n                <button mat-mini-fab matStepperNext color=\\\"primary\\\" matTooltip=\\\"Siguiente\\\" matTooltipPosition=\\\"after\\\">\\r\\n                    <mat-icon>expand_more</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </mat-step>\\r\\n    <mat-step [stepControl]=\\\"deliveryForm\\\" label=\\\"Método de entrega\\\">\\r\\n        <form [formGroup]=\\\"deliveryForm\\\" class=\\\"p-2\\\">\\r\\n            <mat-radio-group formControlName=\\\"deliveryMethod\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" required\\r\\n                             name=\\\"methods\\\">\\r\\n                <mat-radio-button *ngFor=\\\"let method of deliveryMethods\\\" color=\\\"primary\\\" [value]=\\\"method\\\" class=\\\"mt-1\\\">\\r\\n                    <b>{{method.name}}</b>\\r\\n                    <p style=\\\"white-space: normal;\\\">{{method.desc}}</p>\\r\\n                </mat-radio-button>\\r\\n            </mat-radio-group>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-2 p-1\\\">\\r\\n                <button mat-mini-fab matStepperPrevious color=\\\"primary\\\" matTooltip=\\\"Atras\\\" matTooltipPosition=\\\"before\\\"\\r\\n                        class=\\\"mr-1\\\">\\r\\n                    <mat-icon>expand_less</mat-icon>\\r\\n                </button>\\r\\n                <button mat-mini-fab matStepperNext color=\\\"primary\\\" matTooltip=\\\"Siguiente\\\" matTooltipPosition=\\\"after\\\">\\r\\n                    <mat-icon>expand_more</mat-icon>\\r\\n                </button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </mat-step>\\r\\n    <!--<mat-step [stepControl]=\\\"paymentForm\\\" label=\\\"Método de pago\\\">\\r\\n      <form [formGroup]=\\\"paymentForm\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\" class=\\\"p-1\\\">\\r\\n            <span class=\\\"text-muted\\\">Elige método para realizar tu pago</span>\\r\\n            <img src=\\\"assets/images/others/card-icon.png\\\" alt=\\\"\\\">\\r\\n          </div>\\r\\n          <mat-radio-group formControlName=\\\"paymentMethod\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center\\\" required\\r\\n                           name=\\\"methods\\\" (change)=\\\"calculateTotal()\\\">\\r\\n            <mat-radio-button *ngFor=\\\"let method of paymentMethods\\\" color=\\\"primary\\\" [value]=\\\"method\\\" class=\\\"mt-1\\\">\\r\\n              <b>{{method.name}}</b>\\r\\n              <p style=\\\"white-space: normal;\\\">{{method.desc}}</p>\\r\\n            </mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-2 p-1\\\">\\r\\n          <button mat-mini-fab matStepperPrevious color=\\\"primary\\\" matTooltip=\\\"Atras\\\" matTooltipPosition=\\\"before\\\"\\r\\n                  class=\\\"mr-1\\\">\\r\\n            <mat-icon>expand_less</mat-icon>\\r\\n          </button>\\r\\n          <button mat-mini-fab matStepperNext color=\\\"primary\\\" matTooltip=\\\"Siguiente\\\" matTooltipPosition=\\\"after\\\">\\r\\n            <mat-icon>expand_more</mat-icon>\\r\\n          </button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-step>-->\\r\\n    <mat-step label=\\\"Vista previa de la orden\\\">\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\" class=\\\"p-1\\\">\\r\\n                <h3 class=\\\"text-muted\\\">Carrito de compra</h3>\\r\\n                <div class=\\\"divider\\\"></div>\\r\\n                <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n                    <!-- ID Column -->\\r\\n                    <ng-container matColumnDef=\\\"producto\\\">\\r\\n                        <mat-header-cell *matHeaderCellDef mat-sort-header [disabled]=\\\"true\\\"></mat-header-cell>\\r\\n                        <mat-cell *matCellDef=\\\"let product\\\" data-label=\\\"Producto\\\"><img [src]=\\\"product.images[0].small\\\"\\r\\n                                                                                       (error)=\\\"handleImgError($event)\\\"\\r\\n                                                                                       style=\\\"width: auto; height: 140px;\\\">\\r\\n                        </mat-cell>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Progress Column -->\\r\\n                    <ng-container matColumnDef=\\\"nombre\\\">\\r\\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> Nombre</mat-header-cell>\\r\\n                        <mat-cell *matCellDef=\\\"let product\\\" data-label=\\\"Nombre\\\"> {{product.name}} </mat-cell>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Name Column -->\\r\\n                    <ng-container matColumnDef=\\\"precio\\\">\\r\\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> Precio unitario</mat-header-cell>\\r\\n                        <mat-cell *matCellDef=\\\"let product\\\" data-label=\\\"Precio\\\">\\r\\n                            ${{product.newPrice | number : '1.2-2'}} </mat-cell>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Color Column -->\\r\\n                    <ng-container matColumnDef=\\\"cantidad\\\">\\r\\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> Cantidad</mat-header-cell>\\r\\n                        <mat-cell *matCellDef=\\\"let product\\\" data-label=\\\"Cantidad\\\"> {{product.cartCount}} </mat-cell>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <!-- Color Column -->\\r\\n                    <ng-container matColumnDef=\\\"total\\\">\\r\\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> Total</mat-header-cell>\\r\\n                        <mat-cell *matCellDef=\\\"let product\\\" data-label=\\\"Total\\\">\\r\\n                            ${{ (product.newPrice * product.cartCount) | number : '1.2-2'}} </mat-cell>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n                    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n                    </mat-row>\\r\\n\\r\\n                </mat-table>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\">\\r\\n            <div fxFlex=\\\"100\\\" class=\\\"p-1\\\">\\r\\n                <h3 class=\\\"text-muted mt-2\\\">Método de envio</h3>\\r\\n                <div class=\\\"divider\\\"></div>\\r\\n                <p class=\\\"py-1\\\">{{deliveryForm.controls.deliveryMethod.value['name']}} <span\\r\\n                        class=\\\"text-muted\\\">{{deliveryForm.controls.deliveryMethod.value['desc']}}</span></p>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"p-1\\\">\\r\\n            <h2><span class=\\\"text-muted mr-1\\\">Precio total:</span><span>${{grandTotal | number : '1.2-2'}}</span></h2>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n            <div fxFlex=\\\"100\\\" class=\\\"p-1\\\">\\r\\n                <h3 class=\\\"text-muted mt-2\\\">Datos de envio</h3>\\r\\n                <mat-checkbox [(ngModel)]=\\\"showBilling\\\">Agregar datos de facturación</mat-checkbox>\\r\\n                <div class=\\\"divider\\\"></div>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-1\\\">\\r\\n                <p class=\\\"text-muted\\\">Nombre:</p>\\r\\n                <p>{{billingForm.controls.firstName.value}} {{billingForm.controls.lastName.value}}</p>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-1\\\">\\r\\n                <p class=\\\"text-muted\\\">Correo electrónico:</p>\\r\\n                <p>{{billingForm.controls.email.value}}</p>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-1\\\">\\r\\n                <p class=\\\"text-muted\\\">Teléfono:</p>\\r\\n                <p>{{billingForm.controls.phone.value}}</p>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-1\\\">\\r\\n                <p class=\\\"text-muted\\\">Estado:</p>\\r\\n                <p>{{billingForm.controls.state.value}}</p>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-1\\\">\\r\\n                <p class=\\\"text-muted\\\">Ciudad:</p>\\r\\n                <p>{{billingForm.controls.city.value}}</p>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-1\\\">\\r\\n                <p class=\\\"text-muted\\\">Código postal:</p>\\r\\n                <p>{{billingForm.controls.zip.value}}</p>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-1\\\">\\r\\n                <p class=\\\"text-muted\\\">Colonia:</p>\\r\\n                <p>{{billingForm.controls.suburb.value}}</p>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"p-1\\\">\\r\\n                <p class=\\\"text-muted\\\">Dirección:</p>\\r\\n                <p>{{billingForm.controls.address.value}}</p>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\" fxShow=\\\"{{showBilling}}\\\">\\r\\n            <form [formGroup]=\\\"billMandatoryForm\\\">\\r\\n                <div fxLayout=\\\"row wrap\\\">\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Tipo de persona</mat-label>\\r\\n                            <mat-select required formControlName=\\\"typePerson\\\">\\r\\n                                <mat-option [value]=\\\"'fisica'\\\">\\r\\n                                    Persona Física\\r\\n                                </mat-option>\\r\\n                                <mat-option [value]=\\\"'moral'\\\">\\r\\n                                    Persona Moral\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.socialReason.errors?.required\\\">Tipo de persona\\r\\n                                es requerido\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Uso de CFDI</mat-label>\\r\\n                            <mat-select required formControlName=\\\"usoCFDI\\\">\\r\\n                                <mat-option [value]=\\\"'G01 Adquisición de mercancías'\\\">G01 Adquisición de mercancías\\r\\n                                </mat-option>\\r\\n                                <mat-option [value]=\\\"'G03 Gastos en general'\\\">G03 Gastos en general</mat-option>\\r\\n                                <mat-option [value]=\\\"'I08 Otra maquinaria y equipo'\\\">I08 Otra maquinaria y equipo\\r\\n                                </mat-option>\\r\\n                                <mat-option [value]=\\\"'P01 Por definir'\\\">P01 Por definir</mat-option>\\r\\n                            </mat-select>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.usoCFDI.errors?.required\\\">Uso de CFDI es\\r\\n                                requerido\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\"\\r\\n                         [fxShow]=\\\"paymentForm.controls.paymentMethod.value['value']=='Transferencia'\\\">\\r\\n                        <mat-form-field>\\r\\n                            <mat-label>Forma de pago</mat-label>\\r\\n                            <mat-select required formControlName=\\\"typePayment\\\">\\r\\n                                <mat-option [value]=\\\"'01 Efectivo'\\\">Deposito en ventanilla con efectivo</mat-option>\\r\\n                                <mat-option [value]=\\\"'02 Cheque nominativo'\\\">Deposito de cheque</mat-option>\\r\\n                                <mat-option [value]=\\\"'03 Transferencia eletrónica de fondos'\\\">Transferencia\\r\\n                                    electrónica\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.usoCFDI.errors?.required\\\">Uso de CFDI es\\r\\n                                requerido\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Razón social</mat-label>\\r\\n                            <input matInput placeholder=\\\"Razón social\\\" formControlName=\\\"socialReason\\\" maxlength=\\\"100\\\"\\r\\n                                   required>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.socialReason.errors?.required\\\">Razón social es\\r\\n                                requerida\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.socialReason.hasError('pattern')\\\">\\r\\n                                La razón social es invalida\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.socialReason.hasError('minlength')\\\">\\r\\n                                La razón social es muy corta, mínimo 5 caracteres\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>RFC</mat-label>\\r\\n                            <input matInput placeholder=\\\"RFC\\\" formControlName=\\\"rfc\\\" maxlength=\\\"13\\\" required>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.rfc.errors?.required\\\">RFC es requerido\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.rfc.hasError('minlength')\\\">\\r\\n                                El RFC es muy corto, mínimo 12 caracteres\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.rfc.hasError('maxlength')\\\">\\r\\n                                El RFC es muy largo, máximo 13 caracteres\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Corre electrónico</mat-label>\\r\\n                            <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.email.errors?.required\\\">Corre electrónico es\\r\\n                                requerido\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.email.hasError('invalidEmail')\\\">El Correo\\r\\n                                electrónico es invalido\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Estado</mat-label>\\r\\n                            <input matInput placeholder=\\\"Estado\\\" formControlName=\\\"state\\\">\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.state.errors?.required\\\">Estado es requerido\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.state.hasError('minlength')\\\">\\r\\n                                El estado es muy corto, mínimo 5 caracteres\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.state.hasError('pattern')\\\">\\r\\n                                Escribe un estado válido\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Ciudad/Municipio</mat-label>\\r\\n                            <input matInput placeholder=\\\"Ciudad/Municipio\\\" formControlName=\\\"city\\\" required>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.city.errors?.required\\\">Ciudad es requerida\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.city.hasError('minlength')\\\">\\r\\n                                El municipio es muy corto, mínimo 5 caracteres\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.city.hasError('pattern')\\\">\\r\\n                                Escribe un municipio válido\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-1\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Código postal</mat-label>\\r\\n                            <input matInput placeholder=\\\"Código postal\\\" formControlName=\\\"zip\\\" required>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.zip.errors?.required\\\">Código postal es\\r\\n                                requerido\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.zip.hasError('pattern')\\\">\\r\\n                                El Código postal es invalido, ingresa números\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div [fxFlex]=\\\"paymentForm.controls.paymentMethod.value['value']=='Transferencia' ? 75:100\\\"\\r\\n                         class=\\\"px-1\\\">\\r\\n                        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                            <mat-label>Dirección</mat-label>\\r\\n                            <input matInput placeholder=\\\"Dirección (Calle número interior, número exterior )\\\"\\r\\n                                   formControlName=\\\"address\\\" required>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.address.errors?.required\\\">La dirección es\\r\\n                                requerida\\r\\n                            </mat-error>\\r\\n                            <mat-error *ngIf=\\\"billMandatoryForm.controls.address.hasError('minlength')\\\">\\r\\n                                La dirección es muy corta, mínimo 5 caracteres\\r\\n                            </mat-error>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-2 p-1\\\">\\r\\n            <button mat-mini-fab matStepperPrevious color=\\\"primary\\\" matTooltip=\\\"Atras\\\" matTooltipPosition=\\\"before\\\"\\r\\n                    class=\\\"mr-1\\\" [disabled]=\\\"blockButtoms\\\">\\r\\n                <mat-icon>expand_less</mat-icon>\\r\\n            </button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"placeOrder()\\\"\\r\\n                    [disabled]=\\\"blockButtoms\\\">{{textButtonOrder}}</button>\\r\\n        </div>\\r\\n    </mat-step>\\r\\n    <mat-step label=\\\"Confirmación\\\" style=\\\"\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"p-2 text-center\\\">\\r\\n            <button mat-fab class=\\\"bg-color-jd\\\">\\r\\n                <mat-icon>check</mat-icon>\\r\\n            </button>\\r\\n            <h2 class=\\\"mt-2\\\">En tu correo ya tienes el formato con el puedes realizar el desposito en ventanilla o una\\r\\n                transferencia electrónica</h2>\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"p-1\\\">\\r\\n                <h2><span class=\\\"text-muted mr-1\\\">Total a pagar:</span><span>${{grandTotal | number : '1.2-2'}}</span>\\r\\n                </h2>\\r\\n            </div>\\r\\n\\r\\n            <h2 class=\\\"py-1\\\">Datos bancarios:</h2>\\r\\n            <h3 class=\\\"py-1\\\">Beneficiario: JARDEPOT SA de CV</h3>\\r\\n            <h3 class=\\\"py-1\\\">RFC: JAR111021F14</h3>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\" class=\\\"p-2\\\">\\r\\n\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"35\\\" fxFlexOffset.gt-sm=\\\"15\\\" class=\\\"px-1 bank-card\\\"\\r\\n                 fxLayoutAlign=\\\"center center\\\">\\r\\n                <div fxLayout=\\\"column\\\">\\r\\n                    <img src=\\\"assets/images/bancos/citibanamex.png\\\" alt=\\\"Banamex\\\" class=\\\"img-bank\\\">\\r\\n                    <p class=\\\"text-muted lh\\\">Cuenta: <strong>0084594</strong></p>\\r\\n                    <p class=\\\"text-muted lh\\\">Sucursal: <strong>4097</strong></p>\\r\\n                    <p class=\\\"text-muted lh\\\">CLABE: <strong>0025 4040 9700 8459 41</strong></p>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"35\\\" class=\\\"px-1 bank-card\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                <div fxLayout=\\\"column\\\">\\r\\n                    <div fxLayoutAlign=\\\"center center\\\"\\r\\n                         style=\\\"max-height: 132px !important; height: 132px; width: 100%; max-width: 300px;\\\">\\r\\n                        <div style=\\\" background-color: #072146; height: 40%;\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                            <img src=\\\"assets/images/bancos/bbva.svg\\\" alt=\\\"Bancomer\\\" style=\\\"width: 50%;\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <p class=\\\"text-muted lh\\\">Cuenta: <strong>0110147699</strong></p>\\r\\n                    <p class=\\\"text-muted lh\\\">CLABE: <strong>0125 4000 1101 4769 96</strong></p>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row wrap\\\" class=\\\"p-2\\\">\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-md=\\\"25\\\" fxFlexOffset.gt-md=\\\"13\\\" class=\\\"bank-card\\\">\\r\\n                <img src=\\\"assets/images/bancos/banbajio.png\\\" alt=\\\"Banbajio\\\" class=\\\"img-bank\\\">\\r\\n                <p class=\\\"text-muted lh\\\">Cuenta: <strong>11925492</strong></p>\\r\\n                <p class=\\\"text-muted lh\\\">CLABE: <strong>0305 4090 0003 3487 84</strong></p>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-md=\\\"25\\\" class=\\\"bank-card\\\">\\r\\n                <img src=\\\"assets/images/bancos/banorte.png\\\" alt=\\\"Banorte\\\" class=\\\"img-bank\\\" style=\\\"height: 119px;\\\">\\r\\n                <p class=\\\"text-muted lh\\\">Cuenta: <strong>0323900559</strong></p>\\r\\n                <p class=\\\"text-muted lh\\\">CLABE: <strong>0725 4000 3239 0055 94</strong></p>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-md=\\\"25\\\" class=\\\"bank-card\\\">\\r\\n                <div class=\\\"img-bank\\\" fxLayoutAlign=\\\"center center\\\" style=\\\"height: 125px;\\\">\\r\\n                    <img src=\\\"assets/images/bancos/santander.svg\\\" alt=\\\"Santander\\\" style=\\\"width: 80%\\\">\\r\\n                </div>\\r\\n                <p class=\\\"text-muted lh\\\">Cuenta: <strong>65505199530</strong></p>\\r\\n                <p class=\\\"text-muted lh\\\">CLABE: <strong>0145 4065 5051 9953 08</strong></p>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <p class=\\\"text-muted lh\\\">\\r\\n            Una vez realizado su depósito o transferencia, favor de informar al correo ventas@jardepot.com Incluyendo\\r\\n            sus datos\\r\\n            completos para facturación y envío, así como los productos solicitados. Después de haber efectuado su pago,\\r\\n            no se\\r\\n            aceptan cancelaciones. Atentos saludos del equipo de atención a clientes JARDEPOT SA de CV. Quienes\\r\\n            agradecen su confianza esperando poder contar con su preferencia.\\r\\n        </p>\\r\\n\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-2 p-1\\\">\\r\\n            <a [routerLink]=\\\"['/']\\\" mat-raised-button color=\\\"primary\\\">Regresar al inicio</a>\\r\\n        </div>\\r\\n\\r\\n    </mat-step>\\r\\n</mat-vertical-stepper>\\r\\n\"","module.exports = \".review-order-table.mat-table {\\n  display: block;\\n  overflow-x: auto;\\n}\\n.review-order-table.mat-table .mat-row, .review-order-table.mat-table .mat-header-row {\\n  display: flex;\\n  border-bottom-width: 1px;\\n  border-bottom-style: solid;\\n  align-items: center;\\n  min-height: 48px;\\n  padding: 0 24px;\\n  min-width: 760px;\\n}\\n.review-order-table.mat-table .mat-row {\\n  min-height: 60px;\\n}\\n.review-order-table.mat-table .mat-cell, .review-order-table.mat-table .mat-header-cell {\\n  flex: 1;\\n  overflow: hidden;\\n  word-wrap: break-word;\\n}\\n.review-order-table.mat-table .mat-header-cell {\\n  font-size: 14px;\\n}\\n.review-order-table.mat-table .mat-cell img {\\n  width: 60px;\\n}\\n.bank-card .img-bank {\\n  width: 100%;\\n  max-width: 300px;\\n  max-height: 125px;\\n}\\n.bank-card p {\\n  font-size: 15px;\\n}\\n.bank-card p strong {\\n  color: black;\\n  font-size: 18px;\\n}\\n.mat-step-header:nth-child(7) {\\n  pointer-events: none !important;\\n}\\n#cdk-step-label-1-3 {\\n  pointer-events: none !important;\\n}\\n::ng-deep .mat-horizontal-stepper-header:nth-child(7) {\\n  pointer-events: none !important;\\n}\\n::ng-deep #cdk-step-label-1-3 {\\n  pointer-events: none !important;\\n}\\n@media screen and (max-width: 960px) {\\n  .mat-table {\\n    border: 0;\\n    vertical-align: middle;\\n  }\\n\\n  .mat-table caption {\\n    font-size: 1em;\\n  }\\n\\n  /*  Enable this to hide header\\n  */\\n  .mat-table .mat-header-cell {\\n    border: 10px solid;\\n    clip: rect(0 0 0 0);\\n    height: 1px;\\n    margin: -1px;\\n    padding: 0;\\n    position: absolute;\\n    width: 1px;\\n  }\\n\\n  .mat-table .mat-row {\\n    border-bottom: 5px solid #ddd;\\n    display: block;\\n  }\\n\\n  /*\\n  .mat-table .mat-row:nth-child(even) {background: #CCC}\\n  .mat-table .mat-row:nth-child(odd) {background: #FFF}\\n  */\\n  .mat-table .mat-cell {\\n    border-bottom: 1px solid #ddd;\\n    display: block;\\n    font-size: 1em;\\n    text-align: right;\\n    font-weight: bold;\\n    height: 30px;\\n    margin-bottom: 4%;\\n  }\\n\\n  .mat-table .mat-row .mat-cell:nth-child(1) {\\n    text-align: center;\\n    height: 150px;\\n  }\\n\\n  .mat-table .mat-row .mat-cell:nth-child(1):before {\\n    display: none;\\n  }\\n\\n  .mat-table .mat-cell:before {\\n    /*\\n    * aria-label has no advantage, it won't be read inside a table\\n    content: attr(aria-label);\\n    */\\n    content: attr(data-label);\\n    float: left;\\n    text-transform: capitalize;\\n    font-weight: normal;\\n    font-size: 0.85em;\\n  }\\n\\n  .mat-table .mat-cell:last-child {\\n    border-bottom: 0;\\n  }\\n\\n  .mat-table .mat-cell:first-child {\\n    margin-top: 4%;\\n  }\\n}\\n::ng-deep div.mat-select-value {\\n  color: #000 !important;\\n}\\n::ng-deep #mat-select-0 > div > div.mat-select-arrow-wrapper {\\n  color: #000 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {MatDialog, MatStepper, MatTableDataSource} from '@angular/material';\r\nimport {AppService} from '../../app.service';\r\nimport {Product} from '../../app.models';\r\nimport {DialogComponent} from '../../shared/dialog/dialog.component';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {emailValidator} from '../../theme/utils/app-validators';\r\n\r\n@Component({\r\n    selector: 'app-checkout',\r\n    templateUrl: './checkout.component.html',\r\n    styleUrls: ['./checkout.component.scss']\r\n})\r\nexport class CheckoutComponent implements OnInit {\r\n    @ViewChild('horizontalStepper', {static: true}) horizontalStepper: MatStepper;\r\n    @ViewChild('verticalStepper', {static: true}) verticalStepper: MatStepper;\r\n    billingForm: FormGroup;\r\n    billMandatoryForm: FormGroup;\r\n    deliveryForm: FormGroup;\r\n    paymentForm: FormGroup;\r\n    countries = [];\r\n    months = [];\r\n    years = [];\r\n    deliveryMethods = [];\r\n    paymentMethods = [];\r\n    grandTotal = 0;\r\n    temp = 'a';\r\n    showBilling = false;\r\n    blockButtoms = false;\r\n    dataSource: MatTableDataSource<any>;\r\n    displayedColumns = ['producto', 'nombre', 'precio', 'cantidad', 'total'];\r\n    textButtonOrder = 'Crear orden de compra';\r\n\r\n\r\n    constructor(public appService: AppService, public formBuilder: FormBuilder, public dialog: MatDialog, private cookieService: CookieService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        // this.dataSource = new MatTableDataSource(this.appService.Data.cartList);\r\n        this.deliveryMethods = this.appService.getDeliveryMethods();\r\n        this.paymentMethods = this.appService.getPaymentMethods();\r\n        // formularios para la compra\r\n        this.billingForm = this.formBuilder.group({\r\n            firstName: [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.pattern('[a-zA-ZñÑáéíóúÁÉÍÓÚ\\s ]{3,50}')])],\r\n            lastName: [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.pattern('[a-zA-ZñÑáéíóúÁÉÍÓÚ\\s ]{3,50}')])],\r\n            email: [null, Validators.compose([Validators.required, emailValidator])],\r\n            phone: [null, Validators.compose([Validators.required, Validators.minLength(10), Validators.pattern('[0-9]*')])],\r\n            state: [null, Validators.compose([Validators.required, Validators.minLength(5), Validators.pattern('[a-zA-ZñÑáéíóúÁÉÍÓÚ\\s ]{5,50}')])],\r\n            city: [null, Validators.compose([Validators.required, Validators.minLength(5), Validators.pattern('[a-zA-ZñÑáéíóúÁÉÍÓÚ\\s ]{5,50}')])],\r\n            suburb: [null, Validators.compose([Validators.required, Validators.minLength(5)])],\r\n            zip: [null, Validators.compose([Validators.required, Validators.minLength(5), Validators.pattern('[0-9]*')])],\r\n            address: [null, Validators.compose([Validators.required, Validators.minLength(5)])],\r\n        });\r\n        this.billMandatoryForm = this.formBuilder.group({\r\n            socialReason: [null, Validators.compose([Validators.required, Validators.minLength(5), Validators.pattern('[a-zA-ZñÑáéíóúÁÉÍÓÚ\\s ]{5,100}')])],\r\n            typePerson: ['', Validators.required],\r\n            usoCFDI: ['', Validators.required],\r\n            typePayment: ['', Validators.required],\r\n            rfc: [null, Validators.compose([Validators.required, Validators.minLength(12), Validators.maxLength(13)])],\r\n            email: [null, Validators.compose([Validators.required, emailValidator])],\r\n            state: [null, Validators.compose([Validators.required, Validators.minLength(5), Validators.pattern('[a-zA-ZñÑáéíóúÁÉÍÓÚ\\s ]{5,50}')])],\r\n            city: [null, Validators.compose([Validators.required, Validators.minLength(5), Validators.pattern('[a-zA-ZñÑáéíóúÁÉÍÓÚ\\s ]{5,50}')])],\r\n            zip: [null, Validators.compose([Validators.required, Validators.minLength(5), Validators.pattern('[0-9]*')])],\r\n            address: [null, Validators.compose([Validators.required, Validators.minLength(5)])],\r\n        });\r\n        this.deliveryForm = this.formBuilder.group({\r\n            deliveryMethod: ['', Validators.required]\r\n        });\r\n        this.paymentForm = this.formBuilder.group({\r\n            paymentMethod: [this.paymentMethods[2], Validators.required]\r\n        });\r\n    }\r\n\r\n    public calculateTotal() {\r\n        let listProducts: Product[] = this.appService.Data.cartList.slice();\r\n        if (this.deliveryForm.controls.deliveryMethod.value['min'] > this.appService.Data.totalPrice) {\r\n            listProducts.push(this.getChargeDelivery());\r\n            this.grandTotal = this.appService.Data.totalPrice + this.deliveryForm.controls.deliveryMethod.value['cost'];\r\n        } else {\r\n            this.grandTotal = this.appService.Data.totalPrice;\r\n        }\r\n\r\n        // this.Data.cartList.push(product);\r\n        /*if(this.paymentForm.controls.paymentMethod.value['value'] != 'Transferencia'){\r\n          listProducts.push(this.getChargePayment());\r\n          this.openGenericDialog(this.paymentForm.controls.paymentMethod.value['value']);\r\n          this.textButtonOrder = 'Pagar';\r\n        }else{\r\n          this.textButtonOrder = 'Crear orden de compra';\r\n        }*/\r\n        // this.grandTotal = this.paymentForm.controls.paymentMethod.value['cost'] * this.grandTotal;\r\n        this.dataSource = new MatTableDataSource(listProducts);\r\n    }\r\n\r\n    public placeOrder() {\r\n        this.horizontalStepper._steps.forEach(step => step.editable = false);\r\n        this.verticalStepper._steps.forEach(step => step.editable = false);\r\n        this.appService.Data.cartList.length = 0;\r\n        this.appService.Data.totalPrice = 0;\r\n        this.appService.Data.totalCartCount = 0;\r\n        const data = {\r\n            billing: JSON.stringify(this.billingForm.value),\r\n            billMandatory: JSON.stringify(this.billMandatoryForm.value),\r\n            delivery: JSON.stringify(this.deliveryForm.value),\r\n            payment: JSON.stringify(this.paymentForm.value),\r\n            needBilling: this.showBilling\r\n        };\r\n        this.appService.createOrder(data).subscribe(response => {\r\n            this.blockButtoms = true;\r\n            // @ts-ignore\r\n            if (response.data == 'success') {\r\n                if (this.cookieService.check('session')) {\r\n                    this.appService.deleteCookie('session');\r\n                }\r\n                this.horizontalStepper.next();\r\n                this.verticalStepper.next();\r\n            } else {\r\n                // @ts-ignore\r\n                if (response.data.state == 'Mercadopago') {\r\n                    // @ts-ignore\r\n                    this.appService.createMercadopago(response.data.order, response.data.products, response.data.client, response.data.delivery).subscribe(data => {\r\n                        // @ts-ignore\r\n                        const url = data.data;\r\n                        window.open(url, '_self');\r\n                    });\r\n                } else {\r\n                    // @ts-ignore\r\n                    let url = response.data.url;\r\n                    window.open(url, '_self');\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public openGenericDialog($payment) {\r\n        const dialogRef = this.dialog.open(DialogComponent, {\r\n            panelClass: 'generic-dialog',\r\n            direction: 'ltr'\r\n        });\r\n        dialogRef.componentInstance.title = 'Consejo';\r\n        dialogRef.componentInstance.body = 'Para tu seguridad el pedido será enviado a la dirección registrada en ' + $payment + ', por favor verifica que sea correcta.';\r\n    }\r\n\r\n    public getChargeDelivery(): Product {\r\n        let imgs = [];\r\n        imgs[0] = [];\r\n        imgs[0]['small'] = 'assets/images/productos/--.png';\r\n        imgs[0]['medium'] = 'assets/images/productos/--.png';\r\n        imgs[0]['big'] = 'assets/images/productos/--.png';\r\n        let productDelivery = new Product(-1,\r\n            'Manejo de Mercancía Envío paquetería',\r\n            imgs,\r\n            0,\r\n            this.deliveryForm.controls.deliveryMethod.value['cost'],\r\n            0,\r\n            '',\r\n            10,\r\n            10,\r\n            true,\r\n            '',\r\n            '',\r\n            '',\r\n            '',\r\n            '',\r\n            '',\r\n            0,\r\n            1,\r\n            ''\r\n        );\r\n        return productDelivery;\r\n    }\r\n\r\n    public getChargePayment(): Product {\r\n        let imgs = [];\r\n        imgs[0] = [];\r\n        imgs[0]['small'] = 'assets/images/productos/--.png';\r\n        imgs[0]['medium'] = 'assets/images/productos/--.png';\r\n        imgs[0]['big'] = 'assets/images/productos/--.png';\r\n        let productPayment = new Product(-1,\r\n            'Cargo por forma de pago',\r\n            imgs,\r\n            0,\r\n            ((this.paymentForm.controls.paymentMethod.value['cost'] - 1) * this.grandTotal),\r\n            0,\r\n            '',\r\n            10,\r\n            10,\r\n            true,\r\n            '',\r\n            '',\r\n            '',\r\n            '',\r\n            '',\r\n            '',\r\n            0,\r\n            1,\r\n            ''\r\n        );\r\n        return productPayment;\r\n    }\r\n\r\n    public handleImgError(ev: any) {\r\n        const source = ev.srcElement;\r\n        const imgSrc = `assets/images/productos/generico2.jpg`;\r\n        source.src = imgSrc;\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { CheckoutComponent } from './checkout.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: CheckoutComponent, pathMatch: 'full' },\r\n  { path: '/pay', component: CheckoutComponent, pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    CheckoutComponent\r\n  ]\r\n})\r\nexport class CheckoutModule { }\r\n"],"sourceRoot":"webpack:///"}