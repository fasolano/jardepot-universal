(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["pages-checkout-checkout-module"],{

/***/ "./node_modules/raw-loader/index.js!./src/app/pages/checkout/checkout.component.html":
/*!**********************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/pages/checkout/checkout.component.html ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-horizontal-stepper #horizontalStepper linear=\"true\" class=\"mat-elevation-z2\" fxShow=\"false\" fxShow.gt-sm>\r\n    <mat-step [stepControl]=\"billingForm\" label=\"Datos de envio\">\r\n        <form [formGroup]=\"billingForm\">\r\n            <div fxLayout=\"row wrap\">\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Nombre(s)</mat-label>\r\n                        <input matInput placeholder=\"Nombre(s)\" formControlName=\"firstName\" maxlength=\"50\" required>\r\n                        <mat-error *ngIf=\"billingForm.controls.firstName.errors?.required\">\r\n                            Nombre es requerido\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.firstName.hasError('minlength')\">\r\n                            El nombre es muy corto, mínimo 3 caracteres\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.firstName.hasError('pattern')\">\r\n                            Escribe en nombre válido\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Apellidos</mat-label>\r\n                        <input matInput placeholder=\"Apellido\" formControlName=\"lastName\" maxlength=\"50\" required>\r\n                        <mat-error *ngIf=\"billingForm.controls.lastName.errors?.required\">Apellido es requerido\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.lastName.hasError('minlength')\">\r\n                            El apellido es muy corto, mínimo 3 caracteres\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.lastName.hasError('pattern')\">\r\n                            Escribe un apellido válido\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Email</mat-label>\r\n                        <input matInput placeholder=\"Email\" formControlName=\"email\" required>\r\n                        <mat-error *ngIf=\"billingForm.controls.email.errors?.required\">Correo electrónico es requerido\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.email.hasError('invalidEmail')\">El Correo electrónico es\r\n                            invalido\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Teléfono</mat-label>\r\n                        <input matInput placeholder=\"Teléfono\" formControlName=\"phone\" maxlength=\"10\" required>\r\n                        <mat-error *ngIf=\"billingForm.controls.phone.errors?.required\">Teléfono es requerido</mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.phone.hasError('pattern')\">\r\n                            El teléfono es invalido, ingresa números\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.phone.hasError('minlength')\">\r\n                            El teléfono es muy corto, son 10 números\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Estado</mat-label>\r\n                        <input matInput placeholder=\"Estado\" formControlName=\"state\" maxlength=\"50\" required>\r\n                        <mat-error *ngIf=\"billingForm.controls.state.errors?.required\">Estado es requerido</mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.state.hasError('minlength')\">\r\n                            El estado es muy corto, mínimo 5 caracteres\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.state.hasError('pattern')\">\r\n                            Escribe un estado válido\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Ciudad/Municipio</mat-label>\r\n                        <input matInput placeholder=\"Ciudad/Municipio\" formControlName=\"city\" maxlength=\"50\" required>\r\n                        <mat-error *ngIf=\"billingForm.controls.city.errors?.required\">Ciudad es requerida</mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.city.hasError('minlength')\">\r\n                            El municipio es muy corto, mínimo 5 caracteres\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.city.hasError('pattern')\">\r\n                            Escribe un municipio válido\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Código postal</mat-label>\r\n                        <input matInput placeholder=\"Código postal\" formControlName=\"zip\" maxlength=\"5\" required>\r\n                        <mat-error *ngIf=\"billingForm.controls.zip.errors?.required\">Código postal es requerido\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.zip.hasError('pattern')\">\r\n                            El Código postal es invalido, ingresa números\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Colonia</mat-label>\r\n                        <input matInput placeholder=\"Colonia\" formControlName=\"suburb\" maxlength=\"50\" required>\r\n                        <mat-error *ngIf=\"billingForm.controls.suburb.errors?.required\">La colonia es requerido\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.suburb.hasError('minlength')\">\r\n                            El nombre de la colonia es muy corto, mínimo 5 caracteres\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" class=\"px-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Dirección</mat-label>\r\n                        <input matInput placeholder=\"Dirección (Calle número interior, número exterior )\"\r\n                               formControlName=\"address\" maxlength=\"100\" required>\r\n                        <mat-error *ngIf=\"billingForm.controls.address.errors?.required\">La dirección es requerida\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.address.hasError('minlength')\">\r\n                            La dirección es muy corta, mínimo 5 caracteres\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"mt-2 p-1\">\r\n                <button mat-mini-fab matStepperNext color=\"primary\" matTooltip=\"Siguiente\" matTooltipPosition=\"after\">\r\n                    <mat-icon>navigate_next</mat-icon>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </mat-step>\r\n    <mat-step [stepControl]=\"deliveryForm\" label=\"Método de entrega\">\r\n        <form [formGroup]=\"deliveryForm\" class=\"p-2\">\r\n            <mat-radio-group formControlName=\"deliveryMethod\" fxLayout=\"column\" fxLayoutAlign=\"center\" required\r\n                             name=\"methods\">\r\n                <mat-radio-button *ngFor=\"let method of deliveryMethods\" color=\"primary\" [value]=\"method\" class=\"mt-1\"  (change)=\"calculateTotal()\">\r\n                    <b>{{method.name}}</b> {{method.desc}}</mat-radio-button>\r\n            </mat-radio-group>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"mt-2 p-1\">\r\n                <button mat-mini-fab matStepperPrevious color=\"primary\" matTooltip=\"Atras\" matTooltipPosition=\"before\"\r\n                        class=\"mr-1\">\r\n                    <mat-icon>navigate_before</mat-icon>\r\n                </button>\r\n                <button mat-mini-fab matStepperNext color=\"primary\" matTooltip=\"Siguiente\" matTooltipPosition=\"after\">\r\n                    <mat-icon>navigate_next</mat-icon>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </mat-step>\r\n    <!--<mat-step [stepControl]=\"paymentForm\" label=\"Método de pago\">\r\n      <form [formGroup]=\"paymentForm\">\r\n        <div fxLayout=\"row wrap\">\r\n          <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start start\" class=\"p-1\">\r\n            <span class=\"text-muted\">Elige método para realizar tu pago</span>\r\n            <img src=\"assets/images/others/card-icon.png\" alt=\"\">\r\n          </div>\r\n          <mat-radio-group formControlName=\"paymentMethod\" fxLayout=\"column\" fxLayoutAlign=\"center\" required\r\n                           name=\"methods\" (change)=\"calculateTotal()\">\r\n            <mat-radio-button *ngFor=\"let method of paymentMethods\" color=\"primary\" [value]=\"method\" class=\"mt-1\">\r\n              <b>{{method.name}}</b> {{method.desc}}</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"mt-2 p-1\">\r\n          <button mat-mini-fab matStepperPrevious color=\"primary\" matTooltip=\"Atras\" matTooltipPosition=\"before\"\r\n                  class=\"mr-1\">\r\n            <mat-icon>navigate_before</mat-icon>\r\n          </button>\r\n          <button mat-mini-fab matStepperNext color=\"primary\" matTooltip=\"Siguiente\" matTooltipPosition=\"after\">\r\n            <mat-icon>navigate_next</mat-icon>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </mat-step>-->\r\n    <mat-step label=\"Vista previa de la orden\">\r\n        <div fxLayout=\"row wrap\">\r\n            <div fxFlex=\"100\" class=\"p-1\">\r\n                <h3 class=\"text-muted\">Carrito de compra</h3>\r\n                <div class=\"divider\"></div>\r\n                <div class=\"mat-table review-order-table\">\r\n                    <div class=\"mat-header-row\">\r\n                        <div class=\"mat-header-cell\">Producto</div>\r\n                        <div class=\"mat-header-cell\">Nombre</div>\r\n                        <div class=\"mat-header-cell\">Precio unitario</div>\r\n                        <div class=\"mat-header-cell\">Cantidad</div>\r\n                        <div class=\"mat-header-cell\">Total</div>\r\n                    </div>\r\n                    <div *ngFor=\"let product of appService.Data.cartList\" class=\"mat-row\">\r\n                        <div class=\"mat-cell\"><img [src]=\"product.images[0].small\" (error)=\"handleImgError($event)\">\r\n                        </div>\r\n                        <div class=\"mat-cell\">{{product.name}}</div>\r\n                        <div class=\"mat-cell\">${{product.newPrice | number : '1.2-2'}}</div>\r\n                        <div class=\"mat-cell text-muted\"> {{product.cartCount}} </div>\r\n                        <div class=\"mat-cell\">${{ (product.newPrice * product.cartCount) | number : '1.2-2'}}</div>\r\n                    </div>\r\n                    <div *ngIf=\"paymentForm.controls.paymentMethod.value['value'] != 'Transferencia'\" class=\"mat-row\">\r\n                        <div class=\"mat-cell\"><img [src]=\"'assets/images/productos/--.png'\"></div>\r\n                        <div class=\"mat-cell\">Comisión por forma de pago</div>\r\n                        <div class=\"mat-cell\">\r\n                            ${{ (paymentForm.controls.paymentMethod.value['cost'] - 1) * appService.Data.totalPrice | number : '1.2-2'}}</div>\r\n                        <div class=\"mat-cell text-muted\"> 1</div>\r\n                        <div class=\"mat-cell\">\r\n                            ${{ (paymentForm.controls.paymentMethod.value['cost'] - 1) * appService.Data.totalPrice | number : '1.2-2'}}</div>\r\n                    </div>\r\n                    <div *ngIf=\"deliveryForm.controls.deliveryMethod.value['min'] > appService.Data.totalPrice\"\r\n                         class=\"mat-row\">\r\n                        <div class=\"mat-cell\"><img [src]=\"'assets/images/productos/--.png'\"></div>\r\n                        <div class=\"mat-cell\">Manejo de Mercancía Envío paquetería</div>\r\n                        <div class=\"mat-cell\">\r\n                            ${{ deliveryForm.controls.deliveryMethod.value['cost'] | number : '1.2-2'}}</div>\r\n                        <div class=\"mat-cell text-muted\"> 1</div>\r\n                        <div class=\"mat-cell\">\r\n                            ${{ deliveryForm.controls.deliveryMethod.value['cost'] | number : '1.2-2'}}</div>\r\n                    </div>\r\n\r\n                    <div class=\"mat-row\">\r\n                        <div class=\"mat-cell\"></div>\r\n                        <div class=\"mat-cell\"></div>\r\n                        <div class=\"mat-cell\"></div>\r\n                        <div class=\"mat-cell text-muted\">Subtotal:</div>\r\n                        <div class=\"mat-cell\">${{ grandTotal | number : '1.2-2'}}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"row\">\r\n            <div fxFlex=\"100\" class=\"p-1\">\r\n                <h3 class=\"text-muted mt-2\">Método de envio</h3>\r\n                <div class=\"divider\"></div>\r\n                <p class=\"py-1\">{{deliveryForm.controls.deliveryMethod.value['name']}} <span\r\n                        class=\"text-muted\">{{deliveryForm.controls.deliveryMethod.value['desc']}}</span></p>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"p-1\">\r\n            <h2><span class=\"text-muted mr-1\">Precio total:</span><span>${{grandTotal | number : '1.2-2'}}</span></h2>\r\n        </div>\r\n        <div fxLayout=\"row wrap\">\r\n            <div fxFlex=\"100\" class=\"p-1\">\r\n                <h3 class=\"text-muted mt-2\">Datos de envio</h3>\r\n                <mat-checkbox [(ngModel)]=\"showBilling\">Agregar datos de facturación</mat-checkbox>\r\n                <div class=\"divider\"></div>\r\n            </div>\r\n            <div fxLayout=\"column\" fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"p-1\">\r\n                <p class=\"text-muted\">Nombre:</p>\r\n                <p>{{billingForm.controls.firstName.value}} {{billingForm.controls.lastName.value}}</p>\r\n            </div>\r\n            <div fxLayout=\"column\" fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"p-1\">\r\n                <p class=\"text-muted\">Correo electrónico:</p>\r\n                <p>{{billingForm.controls.email.value}}</p>\r\n            </div>\r\n            <div fxLayout=\"column\" fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"p-1\">\r\n                <p class=\"text-muted\">Teléfono:</p>\r\n                <p>{{billingForm.controls.phone.value}}</p>\r\n            </div>\r\n            <div fxLayout=\"column\" fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"p-1\">\r\n                <p class=\"text-muted\">Estado:</p>\r\n                <p>{{billingForm.controls.state.value}}</p>\r\n            </div>\r\n            <div fxLayout=\"column\" fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"p-1\">\r\n                <p class=\"text-muted\">Ciudad:</p>\r\n                <p>{{billingForm.controls.city.value}}</p>\r\n            </div>\r\n            <div fxLayout=\"column\" fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"p-1\">\r\n                <p class=\"text-muted\">Código postal:</p>\r\n                <p>{{billingForm.controls.zip.value}}</p>\r\n            </div>\r\n            <div fxLayout=\"column\" fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"p-1\">\r\n                <p class=\"text-muted\">Colonia:</p>\r\n                <p>{{billingForm.controls.suburb.value}}</p>\r\n            </div>\r\n            <div fxLayout=\"column\" fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"p-1\">\r\n                <p class=\"text-muted\">Dirección:</p>\r\n                <p>{{billingForm.controls.address.value}}</p>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"row wrap\" fxShow=\"{{showBilling}}\">\r\n            <form [formGroup]=\"billMandatoryForm\">\r\n                <div fxLayout=\"row wrap\">\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                        <mat-form-field>\r\n                            <mat-label>Tipo de persona</mat-label>\r\n                            <mat-select required formControlName=\"typePerson\">\r\n                                <mat-option [value]=\"'fisica'\">\r\n                                    Persona Física\r\n                                </mat-option>\r\n                                <mat-option [value]=\"'moral'\">\r\n                                    Persona Moral\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.socialReason.errors?.required\">Tipo de persona\r\n                                es requerido\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                        <mat-form-field>\r\n                            <mat-label>Uso de CFDI</mat-label>\r\n                            <mat-select required formControlName=\"usoCFDI\">\r\n                                <mat-option [value]=\"'G01 Adquisición de mercancías'\">G01 Adquisición de mercancías\r\n                                </mat-option>\r\n                                <mat-option [value]=\"'G03 Gastos en general'\">G03 Gastos en general</mat-option>\r\n                                <mat-option [value]=\"'I08 Otra maquinaria y equipo'\">I08 Otra maquinaria y equipo\r\n                                </mat-option>\r\n                                <mat-option [value]=\"'P01 Por definir'\">P01 Por definir</mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.usoCFDI.errors?.required\">Uso de CFDI es\r\n                                requerido\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\"\r\n                         [fxShow]=\"paymentForm.controls.paymentMethod.value['value']=='Transferencia'\">\r\n                        <mat-form-field>\r\n                            <mat-label>Forma de pago</mat-label>\r\n                            <mat-select required formControlName=\"typePayment\">\r\n                                <mat-option [value]=\"'01 Efectivo'\">Deposito en ventanilla con efectivo</mat-option>\r\n                                <mat-option [value]=\"'02 Cheque nominativo'\">Deposito de cheque</mat-option>\r\n                                <mat-option [value]=\"'03 Transferencia eletrónica de fondos'\">Transferencia\r\n                                    electrónica\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.usoCFDI.errors?.required\">Uso de CFDI es\r\n                                requerido\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Razón social</mat-label>\r\n                            <input matInput placeholder=\"Razón social\" formControlName=\"socialReason\" maxlength=\"100\"\r\n                                   required>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.socialReason.errors?.required\">Razón social es\r\n                                requerido\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.socialReason.hasError('pattern')\">\r\n                                La razón social es invalida\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.socialReason.hasError('minlength')\">\r\n                                La razón social es muy corta, mínimo 5 caracteres\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>RFC</mat-label>\r\n                            <input matInput placeholder=\"RFC\" formControlName=\"rfc\" required>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.rfc.errors?.required\">RFC es requerido\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.rfc.hasError('minlength')\">\r\n                                El RFC es muy corto, mínimo 12 caracteres\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.rfc.hasError('maxlength')\">\r\n                                El RFC es muy largo, máximo 13 caracteres\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Corre electrónico</mat-label>\r\n                            <input matInput placeholder=\"Email\" formControlName=\"email\" required>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.email.errors?.required\">Corre electrónico es\r\n                                requerido\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.email.hasError('invalidEmail')\">El Correo\r\n                                electrónico es invalido\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Estado</mat-label>\r\n                            <input matInput placeholder=\"Estado\" formControlName=\"state\">\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.state.errors?.required\">Estado es requerido\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.state.hasError('minlength')\">\r\n                                El estado es muy corto, mínimo 5 caracteres\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.state.hasError('pattern')\">\r\n                                Escribe un estado válido\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Ciudad/Municipio</mat-label>\r\n                            <input matInput placeholder=\"Ciudad/Municipio\" formControlName=\"city\" required>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.city.errors?.required\">Ciudad es requerida\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.city.hasError('minlength')\">\r\n                                El municipio es muy corto, mínimo 5 caracteres\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.city.hasError('pattern')\">\r\n                                Escribe un municipio válido\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Código postal</mat-label>\r\n                            <input matInput placeholder=\"Código postal\" formControlName=\"zip\" required>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.zip.errors?.required\">Código postal es\r\n                                requerido\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.zip.hasError('pattern')\">\r\n                                El Código postal es invalido, ingresa números\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div [fxFlex]=\"paymentForm.controls.paymentMethod.value['value']=='Transferencia' ? 75:100\"\r\n                         class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Dirección</mat-label>\r\n                            <input matInput placeholder=\"Dirección (Calle número interior, número exterior )\"\r\n                                   formControlName=\"address\" required>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.address.errors?.required\">La dirección es\r\n                                requerida\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.address.hasError('minlength')\">\r\n                                La dirección es muy corta, mínimo 5 caracteres\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"mt-2 p-1\">\r\n            <button mat-mini-fab matStepperPrevious color=\"primary\" matTooltip=\"Atras\" matTooltipPosition=\"before\"\r\n                    class=\"mr-1\" [disabled]=\"blockButtoms\">\r\n                <mat-icon>navigate_before</mat-icon>\r\n            </button>\r\n            <button mat-raised-button color=\"primary\" (click)=\"placeOrder()\"\r\n                    [disabled]=\"blockButtoms\">{{textButtonOrder}}</button>\r\n        </div>\r\n    </mat-step>\r\n    <mat-step label=\"Confirmación\" style=\"\">\r\n        <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"p-2 text-center\">\r\n            <button mat-fab class=\"bg-color-jd\">\r\n                <mat-icon>check</mat-icon>\r\n            </button>\r\n            <h2 class=\"mt-2\">En tu correo ya tienes el formato con el puedes realizar el desposito en ventanilla o una\r\n                transferencia electrónica</h2>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"p-1\">\r\n                <h2><span class=\"text-muted mr-1\">Total a pagar:</span><span>${{grandTotal | number : '1.2-2'}}</span>\r\n                </h2>\r\n            </div>\r\n\r\n            <h2 class=\"py-1\">Datos bancarios:</h2>\r\n            <h3 class=\"py-1\">Beneficiario: JARDEPOT SA de CV</h3>\r\n            <h3 class=\"py-1\">RFC: JAR111021F14</h3>\r\n        </div>\r\n        <div fxLayout=\"row wrap\" class=\"p-2\">\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"35\" fxFlexOffset.gt-sm=\"15\" class=\"px-1 bank-card\"\r\n                 fxLayoutAlign=\"center center\">\r\n                <div fxLayout=\"column\">\r\n                    <img src=\"assets/images/bancos/citibanamex.png\" alt=\"Banamex\" class=\"img-bank\">\r\n                    <p class=\"text-muted lh\">Cuenta: <strong>0084594</strong></p>\r\n                    <p class=\"text-muted lh\">Sucursal: <strong>4097</strong></p>\r\n                    <p class=\"text-muted lh\">CLABE: <strong>0025 4040 9700 8459 41</strong></p>\r\n                </div>\r\n            </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"35\" class=\"px-1 bank-card\" fxLayoutAlign=\"center center\">\r\n                <div fxLayout=\"column\">\r\n                    <div fxLayoutAlign=\"center center\"\r\n                         style=\"max-height: 132px !important; height: 132px; width: 100%; max-width: 300px;\">\r\n                        <div style=\" background-color: #072146; height: 40%;\" fxLayoutAlign=\"center center\">\r\n                            <img src=\"assets/images/bancos/bbva.svg\" alt=\"Bancomer\" style=\"width: 50%;\">\r\n                        </div>\r\n                    </div>\r\n                    <p class=\"text-muted lh\">Cuenta: <strong>0110147699</strong></p>\r\n                    <p class=\"text-muted lh\">CLABE: <strong>0125 4000 1101 4769 96</strong></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"row wrap\" class=\"p-2\">\r\n            <div fxFlex=\"33\" fxFlex.gt-md=\"25\" fxFlexOffset.gt-md=\"13\" class=\"bank-card\">\r\n                <img src=\"assets/images/bancos/banbajio.png\" alt=\"Banbajio\" class=\"img-bank\">\r\n                <p class=\"text-muted lh\">Cuenta: <strong>11925492</strong></p>\r\n                <p class=\"text-muted lh\">CLABE: <strong>0305 4090 0003 3487 84</strong></p>\r\n            </div>\r\n\r\n            <div fxFlex=\"33\" fxFlex.gt-md=\"25\" class=\"bank-card\">\r\n                <img src=\"assets/images/bancos/banorte.png\" alt=\"Banorte\" class=\"img-bank\" style=\"height: 119px;\">\r\n                <p class=\"text-muted lh\">Cuenta: <strong>0323900559</strong></p>\r\n                <p class=\"text-muted lh\">CLABE: <strong>0725 4000 3239 0055 94</strong></p>\r\n            </div>\r\n\r\n            <div fxFlex=\"33\" fxFlex.gt-md=\"25\" class=\"bank-card\">\r\n                <div class=\"img-bank\" fxLayoutAlign=\"center center\" style=\"height: 125px;\">\r\n                    <img src=\"assets/images/bancos/santander.svg\" alt=\"Santander\" style=\"width: 80%\">\r\n                </div>\r\n                <p class=\"text-muted lh\">Cuenta: <strong>65505199530</strong></p>\r\n                <p class=\"text-muted lh\">CLABE: <strong>0145 4065 5051 9953 08</strong></p>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <p class=\"text-muted lh\">\r\n            Una vez realizado su depósito o transferencia, favor de informar al correo ventas@jardepot.com Incluyendo\r\n            sus datos\r\n            completos para facturación y envío, así como los productos solicitados. Después de haber efectuado su pago,\r\n            no se\r\n            aceptan cancelaciones. Atentos saludos del equipo de atención a clientes JARDEPOT SA de CV. Quienes\r\n            agradecen su confianza esperando poder contar con su preferencia.\r\n        </p>\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"mt-2 p-1\">\r\n            <a [routerLink]=\"['/']\" mat-raised-button color=\"primary\">Regresar al inicio</a>\r\n        </div>\r\n\r\n    </mat-step>\r\n</mat-horizontal-stepper>\r\n\r\n<mat-vertical-stepper #verticalStepper linear=\"true\" class=\"mat-elevation-z2\" fxHide=\"false\" fxHide.gt-sm>\r\n    <mat-step [stepControl]=\"billingForm\" label=\"Datos de envio\">\r\n        <form [formGroup]=\"billingForm\">\r\n            <div fxLayout=\"row wrap\">\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Nombre(s)</mat-label>\r\n                        <input matInput placeholder=\"Nombre(s)\" formControlName=\"firstName\" maxlength=\"50\" required>\r\n                        <mat-error *ngIf=\"billingForm.controls.firstName.errors?.required\">Nombre es requerido\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.firstName.hasError('minlength')\">\r\n                            El nombre es muy corto, mínimo 3 caracteres\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.firstName.hasError('pattern')\">\r\n                            Escribe en nombre válido\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Apellidos</mat-label>\r\n                        <input matInput placeholder=\"Apellido\" formControlName=\"lastName\" maxlength=\"50\" required>\r\n                        <mat-error *ngIf=\"billingForm.controls.lastName.errors?.required\">Apellido es requerido\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-error *ngIf=\"billingForm.controls.lastName.hasError('minlength')\">\r\n                        El apellido es muy corto, mínimo 3 caracteres\r\n                    </mat-error>\r\n                    <mat-error *ngIf=\"billingForm.controls.lastName.hasError('pattern')\">\r\n                        Escribe un apellido válido\r\n                    </mat-error>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Email</mat-label>\r\n                        <input matInput placeholder=\"Email\" formControlName=\"email\" required>\r\n                        <mat-error *ngIf=\"billingForm.controls.email.errors?.required\">Corre eletrónico es requerido\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.email.hasError('invalidEmail')\">El Correo eletrónico es\r\n                            invalido\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Teléfono</mat-label>\r\n                        <input matInput placeholder=\"Teléfono\" formControlName=\"phone\" maxlength=\"10\" required>\r\n                        <mat-error *ngIf=\"billingForm.controls.phone.errors?.required\">Teléfono es requerido</mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.phone.hasError('pattern')\">\r\n                            El teléfono es invalido, ingresa números\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.phone.hasError('minlength')\">\r\n                            El teléfono es muy corto, son 10 números\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Estado</mat-label>\r\n                        <input matInput placeholder=\"Estado\" formControlName=\"state\" maxlength=\"50\" required>\r\n                        <mat-error *ngIf=\"billingForm.controls.state.errors?.required\">Estado es requerido</mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.state.hasError('minlength')\">\r\n                            El estado es muy corto, mínimo 5 caracteres\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.state.hasError('pattern')\">\r\n                            Escribe un estado válido\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Ciudad/Municipio</mat-label>\r\n                        <input matInput placeholder=\"Ciudad/Municipio\" formControlName=\"city\" maxlength=\"50\" required>\r\n                        <mat-error *ngIf=\"billingForm.controls.city.errors?.required\">Ciudad es requerida</mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.city.hasError('minlength')\">\r\n                            El municipio es muy corto, mínimo 5 caracteres\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.city.hasError('pattern')\">\r\n                            Escribe un municipio válido\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Código postal</mat-label>\r\n                        <input matInput placeholder=\"Código postal\" formControlName=\"zip\" maxlength=\"5\" required>\r\n                        <mat-error *ngIf=\"billingForm.controls.zip.errors?.required\">Código postal es requerido\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.zip.hasError('pattern')\">\r\n                            El Código postal es invalido, ingresa números\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Colonia</mat-label>\r\n                        <input matInput placeholder=\"Colonia\" formControlName=\"suburb\" maxlength=\"50\" required>\r\n                        <mat-error *ngIf=\"billingForm.controls.suburb.errors?.required\">La colonia es requerido\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"billingForm.controls.suburb.hasError('minlength')\">\r\n                            El nombre de la colonia es muy corto, mínimo 5 caracteres\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div fxFlex=\"100\" class=\"px-1\">\r\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                        <mat-label>Dirección</mat-label>\r\n                        <input matInput placeholder=\"Dirección (Calle número interior, número exterior )\"\r\n                               formControlName=\"address\" maxlength=\"100\" required>\r\n                        <mat-error *ngIf=\"billingForm.controls.address.errors?.required\">La dirección es requerida\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                    <mat-error *ngIf=\"billingForm.controls.address.hasError('minlength')\">\r\n                        La dirección es muy corta, mínimo 5 caracteres\r\n                    </mat-error>\r\n                </div>\r\n            </div>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"mt-2 p-1\">\r\n                <button mat-mini-fab matStepperNext color=\"primary\" matTooltip=\"Siguiente\" matTooltipPosition=\"after\">\r\n                    <mat-icon>expand_more</mat-icon>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </mat-step>\r\n    <mat-step [stepControl]=\"deliveryForm\" label=\"Método de entrega\">\r\n        <form [formGroup]=\"deliveryForm\" class=\"p-2\">\r\n            <mat-radio-group formControlName=\"deliveryMethod\" fxLayout=\"column\" fxLayoutAlign=\"center\" required\r\n                             name=\"methods\">\r\n                <mat-radio-button *ngFor=\"let method of deliveryMethods\" color=\"primary\" [value]=\"method\" class=\"mt-1\">\r\n                    <b>{{method.name}}</b>\r\n                    <p style=\"white-space: normal;\">{{method.desc}}</p>\r\n                </mat-radio-button>\r\n            </mat-radio-group>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"mt-2 p-1\">\r\n                <button mat-mini-fab matStepperPrevious color=\"primary\" matTooltip=\"Atras\" matTooltipPosition=\"before\"\r\n                        class=\"mr-1\">\r\n                    <mat-icon>expand_less</mat-icon>\r\n                </button>\r\n                <button mat-mini-fab matStepperNext color=\"primary\" matTooltip=\"Siguiente\" matTooltipPosition=\"after\">\r\n                    <mat-icon>expand_more</mat-icon>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </mat-step>\r\n    <!--<mat-step [stepControl]=\"paymentForm\" label=\"Método de pago\">\r\n      <form [formGroup]=\"paymentForm\">\r\n        <div fxLayout=\"row wrap\">\r\n          <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"start start\" class=\"p-1\">\r\n            <span class=\"text-muted\">Elige método para realizar tu pago</span>\r\n            <img src=\"assets/images/others/card-icon.png\" alt=\"\">\r\n          </div>\r\n          <mat-radio-group formControlName=\"paymentMethod\" fxLayout=\"column\" fxLayoutAlign=\"center\" required\r\n                           name=\"methods\" (change)=\"calculateTotal()\">\r\n            <mat-radio-button *ngFor=\"let method of paymentMethods\" color=\"primary\" [value]=\"method\" class=\"mt-1\">\r\n              <b>{{method.name}}</b>\r\n              <p style=\"white-space: normal;\">{{method.desc}}</p>\r\n            </mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"mt-2 p-1\">\r\n          <button mat-mini-fab matStepperPrevious color=\"primary\" matTooltip=\"Atras\" matTooltipPosition=\"before\"\r\n                  class=\"mr-1\">\r\n            <mat-icon>expand_less</mat-icon>\r\n          </button>\r\n          <button mat-mini-fab matStepperNext color=\"primary\" matTooltip=\"Siguiente\" matTooltipPosition=\"after\">\r\n            <mat-icon>expand_more</mat-icon>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </mat-step>-->\r\n    <mat-step label=\"Vista previa de la orden\">\r\n        <div fxLayout=\"row wrap\">\r\n            <div fxFlex=\"100\" class=\"p-1\">\r\n                <h3 class=\"text-muted\">Carrito de compra</h3>\r\n                <div class=\"divider\"></div>\r\n                <mat-table [dataSource]=\"dataSource\" matSort>\r\n                    <!-- ID Column -->\r\n                    <ng-container matColumnDef=\"producto\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header [disabled]=\"true\"></mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let product\" data-label=\"Producto\"><img [src]=\"product.images[0].small\"\r\n                                                                                       (error)=\"handleImgError($event)\"\r\n                                                                                       style=\"width: auto; height: 140px;\">\r\n                        </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <!-- Progress Column -->\r\n                    <ng-container matColumnDef=\"nombre\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> Nombre</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let product\" data-label=\"Nombre\"> {{product.name}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"precio\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> Precio unitario</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let product\" data-label=\"Precio\">\r\n                            ${{product.newPrice | number : '1.2-2'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <!-- Color Column -->\r\n                    <ng-container matColumnDef=\"cantidad\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> Cantidad</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let product\" data-label=\"Cantidad\"> {{product.cartCount}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <!-- Color Column -->\r\n                    <ng-container matColumnDef=\"total\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> Total</mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let product\" data-label=\"Total\">\r\n                            ${{ (product.newPrice * product.cartCount) | number : '1.2-2'}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n\r\n                </mat-table>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"row\">\r\n            <div fxFlex=\"100\" class=\"p-1\">\r\n                <h3 class=\"text-muted mt-2\">Método de envio</h3>\r\n                <div class=\"divider\"></div>\r\n                <p class=\"py-1\">{{deliveryForm.controls.deliveryMethod.value['name']}} <span\r\n                        class=\"text-muted\">{{deliveryForm.controls.deliveryMethod.value['desc']}}</span></p>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"p-1\">\r\n            <h2><span class=\"text-muted mr-1\">Precio total:</span><span>${{grandTotal | number : '1.2-2'}}</span></h2>\r\n        </div>\r\n        <div fxLayout=\"row wrap\">\r\n            <div fxFlex=\"100\" class=\"p-1\">\r\n                <h3 class=\"text-muted mt-2\">Datos de envio</h3>\r\n                <mat-checkbox [(ngModel)]=\"showBilling\">Agregar datos de facturación</mat-checkbox>\r\n                <div class=\"divider\"></div>\r\n            </div>\r\n            <div fxLayout=\"column\" fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"p-1\">\r\n                <p class=\"text-muted\">Nombre:</p>\r\n                <p>{{billingForm.controls.firstName.value}} {{billingForm.controls.lastName.value}}</p>\r\n            </div>\r\n            <div fxLayout=\"column\" fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"p-1\">\r\n                <p class=\"text-muted\">Correo electrónico:</p>\r\n                <p>{{billingForm.controls.email.value}}</p>\r\n            </div>\r\n            <div fxLayout=\"column\" fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"p-1\">\r\n                <p class=\"text-muted\">Teléfono:</p>\r\n                <p>{{billingForm.controls.phone.value}}</p>\r\n            </div>\r\n            <div fxLayout=\"column\" fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"p-1\">\r\n                <p class=\"text-muted\">Estado:</p>\r\n                <p>{{billingForm.controls.state.value}}</p>\r\n            </div>\r\n            <div fxLayout=\"column\" fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"p-1\">\r\n                <p class=\"text-muted\">Ciudad:</p>\r\n                <p>{{billingForm.controls.city.value}}</p>\r\n            </div>\r\n            <div fxLayout=\"column\" fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"p-1\">\r\n                <p class=\"text-muted\">Código postal:</p>\r\n                <p>{{billingForm.controls.zip.value}}</p>\r\n            </div>\r\n            <div fxLayout=\"column\" fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"p-1\">\r\n                <p class=\"text-muted\">Colonia:</p>\r\n                <p>{{billingForm.controls.suburb.value}}</p>\r\n            </div>\r\n            <div fxLayout=\"column\" fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"p-1\">\r\n                <p class=\"text-muted\">Dirección:</p>\r\n                <p>{{billingForm.controls.address.value}}</p>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"row wrap\" fxShow=\"{{showBilling}}\">\r\n            <form [formGroup]=\"billMandatoryForm\">\r\n                <div fxLayout=\"row wrap\">\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                        <mat-form-field>\r\n                            <mat-label>Tipo de persona</mat-label>\r\n                            <mat-select required formControlName=\"typePerson\">\r\n                                <mat-option [value]=\"'fisica'\">\r\n                                    Persona Física\r\n                                </mat-option>\r\n                                <mat-option [value]=\"'moral'\">\r\n                                    Persona Moral\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.socialReason.errors?.required\">Tipo de persona\r\n                                es requerido\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                        <mat-form-field>\r\n                            <mat-label>Uso de CFDI</mat-label>\r\n                            <mat-select required formControlName=\"usoCFDI\">\r\n                                <mat-option [value]=\"'G01 Adquisición de mercancías'\">G01 Adquisición de mercancías\r\n                                </mat-option>\r\n                                <mat-option [value]=\"'G03 Gastos en general'\">G03 Gastos en general</mat-option>\r\n                                <mat-option [value]=\"'I08 Otra maquinaria y equipo'\">I08 Otra maquinaria y equipo\r\n                                </mat-option>\r\n                                <mat-option [value]=\"'P01 Por definir'\">P01 Por definir</mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.usoCFDI.errors?.required\">Uso de CFDI es\r\n                                requerido\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\"\r\n                         [fxShow]=\"paymentForm.controls.paymentMethod.value['value']=='Transferencia'\">\r\n                        <mat-form-field>\r\n                            <mat-label>Forma de pago</mat-label>\r\n                            <mat-select required formControlName=\"typePayment\">\r\n                                <mat-option [value]=\"'01 Efectivo'\">Deposito en ventanilla con efectivo</mat-option>\r\n                                <mat-option [value]=\"'02 Cheque nominativo'\">Deposito de cheque</mat-option>\r\n                                <mat-option [value]=\"'03 Transferencia eletrónica de fondos'\">Transferencia\r\n                                    electrónica\r\n                                </mat-option>\r\n                            </mat-select>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.usoCFDI.errors?.required\">Uso de CFDI es\r\n                                requerido\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Razón social</mat-label>\r\n                            <input matInput placeholder=\"Razón social\" formControlName=\"socialReason\" maxlength=\"100\"\r\n                                   required>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.socialReason.errors?.required\">Razón social es\r\n                                requerida\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.socialReason.hasError('pattern')\">\r\n                                La razón social es invalida\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.socialReason.hasError('minlength')\">\r\n                                La razón social es muy corta, mínimo 5 caracteres\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>RFC</mat-label>\r\n                            <input matInput placeholder=\"RFC\" formControlName=\"rfc\" maxlength=\"13\" required>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.rfc.errors?.required\">RFC es requerido\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.rfc.hasError('minlength')\">\r\n                                El RFC es muy corto, mínimo 12 caracteres\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.rfc.hasError('maxlength')\">\r\n                                El RFC es muy largo, máximo 13 caracteres\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Corre electrónico</mat-label>\r\n                            <input matInput placeholder=\"Email\" formControlName=\"email\" required>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.email.errors?.required\">Corre electrónico es\r\n                                requerido\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.email.hasError('invalidEmail')\">El Correo\r\n                                electrónico es invalido\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Estado</mat-label>\r\n                            <input matInput placeholder=\"Estado\" formControlName=\"state\">\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.state.errors?.required\">Estado es requerido\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.state.hasError('minlength')\">\r\n                                El estado es muy corto, mínimo 5 caracteres\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.state.hasError('pattern')\">\r\n                                Escribe un estado válido\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Ciudad/Municipio</mat-label>\r\n                            <input matInput placeholder=\"Ciudad/Municipio\" formControlName=\"city\" required>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.city.errors?.required\">Ciudad es requerida\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.city.hasError('minlength')\">\r\n                                El municipio es muy corto, mínimo 5 caracteres\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.city.hasError('pattern')\">\r\n                                Escribe un municipio válido\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div fxFlex=\"100\" fxFlex.gt-sm=\"25\" class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Código postal</mat-label>\r\n                            <input matInput placeholder=\"Código postal\" formControlName=\"zip\" required>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.zip.errors?.required\">Código postal es\r\n                                requerido\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.zip.hasError('pattern')\">\r\n                                El Código postal es invalido, ingresa números\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div [fxFlex]=\"paymentForm.controls.paymentMethod.value['value']=='Transferencia' ? 75:100\"\r\n                         class=\"px-1\">\r\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                            <mat-label>Dirección</mat-label>\r\n                            <input matInput placeholder=\"Dirección (Calle número interior, número exterior )\"\r\n                                   formControlName=\"address\" required>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.address.errors?.required\">La dirección es\r\n                                requerida\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"billMandatoryForm.controls.address.hasError('minlength')\">\r\n                                La dirección es muy corta, mínimo 5 caracteres\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"mt-2 p-1\">\r\n            <button mat-mini-fab matStepperPrevious color=\"primary\" matTooltip=\"Atras\" matTooltipPosition=\"before\"\r\n                    class=\"mr-1\" [disabled]=\"blockButtoms\">\r\n                <mat-icon>expand_less</mat-icon>\r\n            </button>\r\n            <button mat-raised-button color=\"primary\" (click)=\"placeOrder()\"\r\n                    [disabled]=\"blockButtoms\">{{textButtonOrder}}</button>\r\n        </div>\r\n    </mat-step>\r\n    <mat-step label=\"Confirmación\" style=\"\">\r\n        <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"p-2 text-center\">\r\n            <button mat-fab class=\"bg-color-jd\">\r\n                <mat-icon>check</mat-icon>\r\n            </button>\r\n            <h2 class=\"mt-2\">En tu correo ya tienes el formato con el puedes realizar el desposito en ventanilla o una\r\n                transferencia electrónica</h2>\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"p-1\">\r\n                <h2><span class=\"text-muted mr-1\">Total a pagar:</span><span>${{grandTotal | number : '1.2-2'}}</span>\r\n                </h2>\r\n            </div>\r\n\r\n            <h2 class=\"py-1\">Datos bancarios:</h2>\r\n            <h3 class=\"py-1\">Beneficiario: JARDEPOT SA de CV</h3>\r\n            <h3 class=\"py-1\">RFC: JAR111021F14</h3>\r\n        </div>\r\n        <div fxLayout=\"row wrap\" class=\"p-2\">\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"35\" fxFlexOffset.gt-sm=\"15\" class=\"px-1 bank-card\"\r\n                 fxLayoutAlign=\"center center\">\r\n                <div fxLayout=\"column\">\r\n                    <img src=\"assets/images/bancos/citibanamex.png\" alt=\"Banamex\" class=\"img-bank\">\r\n                    <p class=\"text-muted lh\">Cuenta: <strong>0084594</strong></p>\r\n                    <p class=\"text-muted lh\">Sucursal: <strong>4097</strong></p>\r\n                    <p class=\"text-muted lh\">CLABE: <strong>0025 4040 9700 8459 41</strong></p>\r\n                </div>\r\n            </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-sm=\"35\" class=\"px-1 bank-card\" fxLayoutAlign=\"center center\">\r\n                <div fxLayout=\"column\">\r\n                    <div fxLayoutAlign=\"center center\"\r\n                         style=\"max-height: 132px !important; height: 132px; width: 100%; max-width: 300px;\">\r\n                        <div style=\" background-color: #072146; height: 40%;\" fxLayoutAlign=\"center center\">\r\n                            <img src=\"assets/images/bancos/bbva.svg\" alt=\"Bancomer\" style=\"width: 50%;\">\r\n                        </div>\r\n                    </div>\r\n                    <p class=\"text-muted lh\">Cuenta: <strong>0110147699</strong></p>\r\n                    <p class=\"text-muted lh\">CLABE: <strong>0125 4000 1101 4769 96</strong></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div fxLayout=\"row wrap\" class=\"p-2\">\r\n            <div fxFlex=\"100\" fxFlex.gt-md=\"25\" fxFlexOffset.gt-md=\"13\" class=\"bank-card\">\r\n                <img src=\"assets/images/bancos/banbajio.png\" alt=\"Banbajio\" class=\"img-bank\">\r\n                <p class=\"text-muted lh\">Cuenta: <strong>11925492</strong></p>\r\n                <p class=\"text-muted lh\">CLABE: <strong>0305 4090 0003 3487 84</strong></p>\r\n            </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-md=\"25\" class=\"bank-card\">\r\n                <img src=\"assets/images/bancos/banorte.png\" alt=\"Banorte\" class=\"img-bank\" style=\"height: 119px;\">\r\n                <p class=\"text-muted lh\">Cuenta: <strong>0323900559</strong></p>\r\n                <p class=\"text-muted lh\">CLABE: <strong>0725 4000 3239 0055 94</strong></p>\r\n            </div>\r\n\r\n            <div fxFlex=\"100\" fxFlex.gt-md=\"25\" class=\"bank-card\">\r\n                <div class=\"img-bank\" fxLayoutAlign=\"center center\" style=\"height: 125px;\">\r\n                    <img src=\"assets/images/bancos/santander.svg\" alt=\"Santander\" style=\"width: 80%\">\r\n                </div>\r\n                <p class=\"text-muted lh\">Cuenta: <strong>65505199530</strong></p>\r\n                <p class=\"text-muted lh\">CLABE: <strong>0145 4065 5051 9953 08</strong></p>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <p class=\"text-muted lh\">\r\n            Una vez realizado su depósito o transferencia, favor de informar al correo ventas@jardepot.com Incluyendo\r\n            sus datos\r\n            completos para facturación y envío, así como los productos solicitados. Después de haber efectuado su pago,\r\n            no se\r\n            aceptan cancelaciones. Atentos saludos del equipo de atención a clientes JARDEPOT SA de CV. Quienes\r\n            agradecen su confianza esperando poder contar con su preferencia.\r\n        </p>\r\n\r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"mt-2 p-1\">\r\n            <a [routerLink]=\"['/']\" mat-raised-button color=\"primary\">Regresar al inicio</a>\r\n        </div>\r\n\r\n    </mat-step>\r\n</mat-vertical-stepper>\r\n"

/***/ }),

/***/ "./src/app/pages/checkout/checkout.component.scss":
/*!********************************************************!*\
  !*** ./src/app/pages/checkout/checkout.component.scss ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".review-order-table.mat-table {\n  display: block;\n  overflow-x: auto;\n}\n.review-order-table.mat-table .mat-row, .review-order-table.mat-table .mat-header-row {\n  display: flex;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  align-items: center;\n  min-height: 48px;\n  padding: 0 24px;\n  min-width: 760px;\n}\n.review-order-table.mat-table .mat-row {\n  min-height: 60px;\n}\n.review-order-table.mat-table .mat-cell, .review-order-table.mat-table .mat-header-cell {\n  flex: 1;\n  overflow: hidden;\n  word-wrap: break-word;\n}\n.review-order-table.mat-table .mat-header-cell {\n  font-size: 14px;\n}\n.review-order-table.mat-table .mat-cell img {\n  width: 60px;\n}\n.bank-card .img-bank {\n  width: 100%;\n  max-width: 300px;\n  max-height: 125px;\n}\n.bank-card p {\n  font-size: 15px;\n}\n.bank-card p strong {\n  color: black;\n  font-size: 18px;\n}\n.mat-step-header:nth-child(7) {\n  pointer-events: none !important;\n}\n#cdk-step-label-1-3 {\n  pointer-events: none !important;\n}\n::ng-deep .mat-horizontal-stepper-header:nth-child(7) {\n  pointer-events: none !important;\n}\n::ng-deep #cdk-step-label-1-3 {\n  pointer-events: none !important;\n}\n@media screen and (max-width: 960px) {\n  .mat-table {\n    border: 0;\n    vertical-align: middle;\n  }\n\n  .mat-table caption {\n    font-size: 1em;\n  }\n\n  /*  Enable this to hide header\n  */\n  .mat-table .mat-header-cell {\n    border: 10px solid;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n  }\n\n  .mat-table .mat-row {\n    border-bottom: 5px solid #ddd;\n    display: block;\n  }\n\n  /*\n  .mat-table .mat-row:nth-child(even) {background: #CCC}\n  .mat-table .mat-row:nth-child(odd) {background: #FFF}\n  */\n  .mat-table .mat-cell {\n    border-bottom: 1px solid #ddd;\n    display: block;\n    font-size: 1em;\n    text-align: right;\n    font-weight: bold;\n    height: 30px;\n    margin-bottom: 4%;\n  }\n\n  .mat-table .mat-row .mat-cell:nth-child(1) {\n    text-align: center;\n    height: 150px;\n  }\n\n  .mat-table .mat-row .mat-cell:nth-child(1):before {\n    display: none;\n  }\n\n  .mat-table .mat-cell:before {\n    /*\n    * aria-label has no advantage, it won't be read inside a table\n    content: attr(aria-label);\n    */\n    content: attr(data-label);\n    float: left;\n    text-transform: capitalize;\n    font-weight: normal;\n    font-size: 0.85em;\n  }\n\n  .mat-table .mat-cell:last-child {\n    border-bottom: 0;\n  }\n\n  .mat-table .mat-cell:first-child {\n    margin-top: 4%;\n  }\n}\n::ng-deep div.mat-select-value {\n  color: #000 !important;\n}\n::ng-deep #mat-select-0 > div > div.mat-select-arrow-wrapper {\n  color: #000 !important;\n}\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/pages/checkout/checkout.component.ts":
/*!******************************************************!*\
  !*** ./src/app/pages/checkout/checkout.component.ts ***!
  \******************************************************/
/*! exports provided: CheckoutComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CheckoutComponent", function() { return CheckoutComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm2015/material.js");
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../app.service */ "./src/app/app.service.ts");
/* harmony import */ var _app_models__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../app.models */ "./src/app/app.models.ts");
/* harmony import */ var _shared_dialog_dialog_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared/dialog/dialog.component */ "./src/app/shared/dialog/dialog.component.ts");
/* harmony import */ var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-cookie-service */ "./node_modules/ngx-cookie-service/ngx-cookie-service.js");
/* harmony import */ var _theme_utils_app_validators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../theme/utils/app-validators */ "./src/app/theme/utils/app-validators.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








let CheckoutComponent = class CheckoutComponent {
    constructor(appService, formBuilder, dialog, cookieService) {
        this.appService = appService;
        this.formBuilder = formBuilder;
        this.dialog = dialog;
        this.cookieService = cookieService;
        this.countries = [];
        this.months = [];
        this.years = [];
        this.deliveryMethods = [];
        this.paymentMethods = [];
        this.grandTotal = 0;
        this.temp = 'a';
        this.showBilling = false;
        this.blockButtoms = false;
        this.displayedColumns = ['producto', 'nombre', 'precio', 'cantidad', 'total'];
        this.textButtonOrder = 'Crear orden de compra';
    }
    ngOnInit() {
        // this.dataSource = new MatTableDataSource(this.appService.Data.cartList);
        this.deliveryMethods = this.appService.getDeliveryMethods();
        this.paymentMethods = this.appService.getPaymentMethods();
        // formularios para la compra
        this.billingForm = this.formBuilder.group({
            firstName: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].minLength(3), _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern('[a-zA-ZñÑáéíóúÁÉÍÓÚ\s ]{3,50}')])],
            lastName: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].minLength(3), _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern('[a-zA-ZñÑáéíóúÁÉÍÓÚ\s ]{3,50}')])],
            email: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _theme_utils_app_validators__WEBPACK_IMPORTED_MODULE_7__["emailValidator"]])],
            phone: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].minLength(10), _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern('[0-9]*')])],
            state: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].minLength(5), _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern('[a-zA-ZñÑáéíóúÁÉÍÓÚ\s ]{5,50}')])],
            city: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].minLength(5), _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern('[a-zA-ZñÑáéíóúÁÉÍÓÚ\s ]{5,50}')])],
            suburb: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].minLength(5)])],
            zip: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].minLength(5), _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern('[0-9]*')])],
            address: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].minLength(5)])],
        });
        this.billMandatoryForm = this.formBuilder.group({
            socialReason: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].minLength(5), _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern('[a-zA-ZñÑáéíóúÁÉÍÓÚ\s ]{5,100}')])],
            typePerson: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            usoCFDI: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            typePayment: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required],
            rfc: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].minLength(12), _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].maxLength(13)])],
            email: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _theme_utils_app_validators__WEBPACK_IMPORTED_MODULE_7__["emailValidator"]])],
            state: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].minLength(5), _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern('[a-zA-ZñÑáéíóúÁÉÍÓÚ\s ]{5,50}')])],
            city: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].minLength(5), _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern('[a-zA-ZñÑáéíóúÁÉÍÓÚ\s ]{5,50}')])],
            zip: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].minLength(5), _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].pattern('[0-9]*')])],
            address: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].minLength(5)])],
        });
        this.deliveryForm = this.formBuilder.group({
            deliveryMethod: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]
        });
        this.paymentForm = this.formBuilder.group({
            paymentMethod: [this.paymentMethods[2], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["Validators"].required]
        });
    }
    calculateTotal() {
        let listProducts = this.appService.Data.cartList.slice();
        if (this.deliveryForm.controls.deliveryMethod.value['min'] > this.appService.Data.totalPrice) {
            listProducts.push(this.getChargeDelivery());
            this.grandTotal = this.appService.Data.totalPrice + this.deliveryForm.controls.deliveryMethod.value['cost'];
        }
        else {
            this.grandTotal = this.appService.Data.totalPrice;
        }
        // this.Data.cartList.push(product);
        /*if(this.paymentForm.controls.paymentMethod.value['value'] != 'Transferencia'){
          listProducts.push(this.getChargePayment());
          this.openGenericDialog(this.paymentForm.controls.paymentMethod.value['value']);
          this.textButtonOrder = 'Pagar';
        }else{
          this.textButtonOrder = 'Crear orden de compra';
        }*/
        // this.grandTotal = this.paymentForm.controls.paymentMethod.value['cost'] * this.grandTotal;
        this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"](listProducts);
    }
    placeOrder() {
        this.horizontalStepper._steps.forEach(step => step.editable = false);
        this.verticalStepper._steps.forEach(step => step.editable = false);
        this.appService.Data.cartList.length = 0;
        this.appService.Data.totalPrice = 0;
        this.appService.Data.totalCartCount = 0;
        const data = {
            billing: JSON.stringify(this.billingForm.value),
            billMandatory: JSON.stringify(this.billMandatoryForm.value),
            delivery: JSON.stringify(this.deliveryForm.value),
            payment: JSON.stringify(this.paymentForm.value),
            needBilling: this.showBilling
        };
        this.appService.createOrder(data).subscribe(response => {
            this.blockButtoms = true;
            // @ts-ignore
            if (response.data == 'success') {
                if (this.cookieService.check('session')) {
                    this.appService.deleteCookie('session');
                }
                this.horizontalStepper.next();
                this.verticalStepper.next();
            }
            else {
                // @ts-ignore
                if (response.data.state == 'Mercadopago') {
                    // @ts-ignore
                    this.appService.createMercadopago(response.data.order, response.data.products, response.data.client, response.data.delivery).subscribe(data => {
                        // @ts-ignore
                        const url = data.data;
                        window.open(url, '_self');
                    });
                }
                else {
                    // @ts-ignore
                    let url = response.data.url;
                    window.open(url, '_self');
                }
            }
        });
    }
    openGenericDialog($payment) {
        const dialogRef = this.dialog.open(_shared_dialog_dialog_component__WEBPACK_IMPORTED_MODULE_5__["DialogComponent"], {
            panelClass: 'generic-dialog',
            direction: 'ltr'
        });
        dialogRef.componentInstance.title = 'Consejo';
        dialogRef.componentInstance.body = 'Para tu seguridad el pedido será enviado a la dirección registrada en ' + $payment + ', por favor verifica que sea correcta.';
    }
    getChargeDelivery() {
        let imgs = [];
        imgs[0] = [];
        imgs[0]['small'] = 'assets/images/productos/--.png';
        imgs[0]['medium'] = 'assets/images/productos/--.png';
        imgs[0]['big'] = 'assets/images/productos/--.png';
        let productDelivery = new _app_models__WEBPACK_IMPORTED_MODULE_4__["Product"](-1, 'Manejo de Mercancía Envío paquetería', imgs, 0, this.deliveryForm.controls.deliveryMethod.value['cost'], 0, '', 10, 10, true, '', '', '', '', '', '', 0, 1, '');
        return productDelivery;
    }
    getChargePayment() {
        let imgs = [];
        imgs[0] = [];
        imgs[0]['small'] = 'assets/images/productos/--.png';
        imgs[0]['medium'] = 'assets/images/productos/--.png';
        imgs[0]['big'] = 'assets/images/productos/--.png';
        let productPayment = new _app_models__WEBPACK_IMPORTED_MODULE_4__["Product"](-1, 'Cargo por forma de pago', imgs, 0, ((this.paymentForm.controls.paymentMethod.value['cost'] - 1) * this.grandTotal), 0, '', 10, 10, true, '', '', '', '', '', '', 0, 1, '');
        return productPayment;
    }
    handleImgError(ev) {
        const source = ev.srcElement;
        const imgSrc = `assets/images/productos/generico2.jpg`;
        source.src = imgSrc;
    }
};
CheckoutComponent.ctorParameters = () => [
    { type: _app_service__WEBPACK_IMPORTED_MODULE_3__["AppService"] },
    { type: _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"] },
    { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"] },
    { type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"] }
];
__decorate([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('horizontalStepper', { static: true }),
    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatStepper"])
], CheckoutComponent.prototype, "horizontalStepper", void 0);
__decorate([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('verticalStepper', { static: true }),
    __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatStepper"])
], CheckoutComponent.prototype, "verticalStepper", void 0);
CheckoutComponent = __decorate([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
        selector: 'app-checkout',
        template: __webpack_require__(/*! raw-loader!./checkout.component.html */ "./node_modules/raw-loader/index.js!./src/app/pages/checkout/checkout.component.html"),
        styles: [__webpack_require__(/*! ./checkout.component.scss */ "./src/app/pages/checkout/checkout.component.scss")]
    }),
    __metadata("design:paramtypes", [_app_service__WEBPACK_IMPORTED_MODULE_3__["AppService"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialog"], ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]])
], CheckoutComponent);



/***/ }),

/***/ "./src/app/pages/checkout/checkout.module.ts":
/*!***************************************************!*\
  !*** ./src/app/pages/checkout/checkout.module.ts ***!
  \***************************************************/
/*! exports provided: routes, CheckoutModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "routes", function() { return routes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CheckoutModule", function() { return CheckoutModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../shared/shared.module */ "./src/app/shared/shared.module.ts");
/* harmony import */ var _checkout_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./checkout.component */ "./src/app/pages/checkout/checkout.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};






const routes = [
    { path: '', component: _checkout_component__WEBPACK_IMPORTED_MODULE_5__["CheckoutComponent"], pathMatch: 'full' },
    { path: '/pay', component: _checkout_component__WEBPACK_IMPORTED_MODULE_5__["CheckoutComponent"], pathMatch: 'full' },
];
let CheckoutModule = class CheckoutModule {
};
CheckoutModule = __decorate([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
            _angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes),
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ReactiveFormsModule"],
            _shared_shared_module__WEBPACK_IMPORTED_MODULE_4__["SharedModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"]
        ],
        declarations: [
            _checkout_component__WEBPACK_IMPORTED_MODULE_5__["CheckoutComponent"]
        ]
    })
], CheckoutModule);



/***/ })

}]);
//# sourceMappingURL=pages-checkout-checkout-module-es2015.js.map